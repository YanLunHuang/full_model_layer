// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _clone_stream_switch_ap_fixed_ap_fixed_config103_s_HH_
#define _clone_stream_switch_ap_fixed_ap_fixed_config103_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct clone_stream_switch_ap_fixed_ap_fixed_config103_s : public sc_module {
    // Port declarations 61
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > data_0_V_V_TDATA;
    sc_in< sc_logic > data_0_V_V_TVALID;
    sc_out< sc_logic > data_0_V_V_TREADY;
    sc_in< sc_lv<32> > data_1_V_V_TDATA;
    sc_in< sc_logic > data_1_V_V_TVALID;
    sc_out< sc_logic > data_1_V_V_TREADY;
    sc_in< sc_lv<32> > data_2_V_V_TDATA;
    sc_in< sc_logic > data_2_V_V_TVALID;
    sc_out< sc_logic > data_2_V_V_TREADY;
    sc_in< sc_lv<32> > data_3_V_V_TDATA;
    sc_in< sc_logic > data_3_V_V_TVALID;
    sc_out< sc_logic > data_3_V_V_TREADY;
    sc_in< sc_lv<32> > data_4_V_V_TDATA;
    sc_in< sc_logic > data_4_V_V_TVALID;
    sc_out< sc_logic > data_4_V_V_TREADY;
    sc_in< sc_lv<32> > data_5_V_V_TDATA;
    sc_in< sc_logic > data_5_V_V_TVALID;
    sc_out< sc_logic > data_5_V_V_TREADY;
    sc_out< sc_lv<32> > res1_0_V_V_TDATA;
    sc_out< sc_logic > res1_0_V_V_TVALID;
    sc_in< sc_logic > res1_0_V_V_TREADY;
    sc_out< sc_lv<32> > res1_1_V_V_TDATA;
    sc_out< sc_logic > res1_1_V_V_TVALID;
    sc_in< sc_logic > res1_1_V_V_TREADY;
    sc_out< sc_lv<32> > res1_2_V_V_TDATA;
    sc_out< sc_logic > res1_2_V_V_TVALID;
    sc_in< sc_logic > res1_2_V_V_TREADY;
    sc_out< sc_lv<32> > res1_3_V_V_TDATA;
    sc_out< sc_logic > res1_3_V_V_TVALID;
    sc_in< sc_logic > res1_3_V_V_TREADY;
    sc_out< sc_lv<32> > res1_4_V_V_TDATA;
    sc_out< sc_logic > res1_4_V_V_TVALID;
    sc_in< sc_logic > res1_4_V_V_TREADY;
    sc_out< sc_lv<32> > res1_5_V_V_TDATA;
    sc_out< sc_logic > res1_5_V_V_TVALID;
    sc_in< sc_logic > res1_5_V_V_TREADY;
    sc_out< sc_lv<32> > res2_0_V_V_TDATA;
    sc_out< sc_logic > res2_0_V_V_TVALID;
    sc_in< sc_logic > res2_0_V_V_TREADY;
    sc_out< sc_lv<32> > res2_1_V_V_TDATA;
    sc_out< sc_logic > res2_1_V_V_TVALID;
    sc_in< sc_logic > res2_1_V_V_TREADY;
    sc_out< sc_lv<32> > res2_2_V_V_TDATA;
    sc_out< sc_logic > res2_2_V_V_TVALID;
    sc_in< sc_logic > res2_2_V_V_TREADY;
    sc_out< sc_lv<32> > res2_3_V_V_TDATA;
    sc_out< sc_logic > res2_3_V_V_TVALID;
    sc_in< sc_logic > res2_3_V_V_TREADY;
    sc_out< sc_lv<32> > res2_4_V_V_TDATA;
    sc_out< sc_logic > res2_4_V_V_TVALID;
    sc_in< sc_logic > res2_4_V_V_TREADY;
    sc_out< sc_lv<32> > res2_5_V_V_TDATA;
    sc_out< sc_logic > res2_5_V_V_TVALID;
    sc_in< sc_logic > res2_5_V_V_TREADY;


    // Module declarations
    clone_stream_switch_ap_fixed_ap_fixed_config103_s(sc_module_name name);
    SC_HAS_PROCESS(clone_stream_switch_ap_fixed_ap_fixed_config103_s);

    ~clone_stream_switch_ap_fixed_ap_fixed_config103_s();

    sc_trace_file* mVcdFile;

    regslice_both<32>* regslice_both_data_0_V_V_U;
    regslice_both<32>* regslice_both_data_1_V_V_U;
    regslice_both<32>* regslice_both_data_2_V_V_U;
    regslice_both<32>* regslice_both_data_3_V_V_U;
    regslice_both<32>* regslice_both_data_4_V_V_U;
    regslice_both<32>* regslice_both_data_5_V_V_U;
    regslice_both<32>* regslice_both_res1_0_V_V_U;
    regslice_both<32>* regslice_both_res1_1_V_V_U;
    regslice_both<32>* regslice_both_res1_2_V_V_U;
    regslice_both<32>* regslice_both_res1_3_V_V_U;
    regslice_both<32>* regslice_both_res1_4_V_V_U;
    regslice_both<32>* regslice_both_res1_5_V_V_U;
    regslice_both<32>* regslice_both_res2_0_V_V_U;
    regslice_both<32>* regslice_both_res2_1_V_V_U;
    regslice_both<32>* regslice_both_res2_2_V_V_U;
    regslice_both<32>* regslice_both_res2_3_V_V_U;
    regslice_both<32>* regslice_both_res2_4_V_V_U;
    regslice_both<32>* regslice_both_res2_5_V_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > data_0_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln107_fu_203_p2;
    sc_signal< sc_logic > data_1_V_V_TDATA_blk_n;
    sc_signal< sc_logic > data_2_V_V_TDATA_blk_n;
    sc_signal< sc_logic > data_3_V_V_TDATA_blk_n;
    sc_signal< sc_logic > data_4_V_V_TDATA_blk_n;
    sc_signal< sc_logic > data_5_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res1_0_V_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > icmp_ln107_reg_215;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln107_reg_215_pp0_iter1_reg;
    sc_signal< sc_logic > res1_1_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res1_2_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res1_3_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res1_4_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res1_5_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res2_0_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res2_1_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res2_2_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res2_3_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res2_4_V_V_TDATA_blk_n;
    sc_signal< sc_logic > res2_5_V_V_TDATA_blk_n;
    sc_signal< sc_lv<6> > i_0_i_reg_192;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<6> > i_fu_209_p2;
    sc_signal< sc_lv<32> > tmp_V_reg_224;
    sc_signal< sc_lv<32> > tmp_V_1_reg_230;
    sc_signal< sc_lv<32> > tmp_V_2_reg_236;
    sc_signal< sc_lv<32> > tmp_V_3_reg_242;
    sc_signal< sc_lv<32> > tmp_V_4_reg_248;
    sc_signal< sc_lv<32> > tmp_V_5_reg_254;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > regslice_both_res1_0_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res1_1_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res1_2_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res1_3_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res1_4_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res1_5_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res2_0_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res2_1_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res2_2_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res2_3_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res2_4_V_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_res2_5_V_V_U_apdone_blk;
    sc_signal< bool > ap_block_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > regslice_both_data_0_V_V_U_apdone_blk;
    sc_signal< sc_lv<32> > data_0_V_V_TDATA_int;
    sc_signal< sc_logic > data_0_V_V_TVALID_int;
    sc_signal< sc_logic > data_0_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_0_V_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_1_V_V_U_apdone_blk;
    sc_signal< sc_lv<32> > data_1_V_V_TDATA_int;
    sc_signal< sc_logic > data_1_V_V_TVALID_int;
    sc_signal< sc_logic > data_1_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_1_V_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_2_V_V_U_apdone_blk;
    sc_signal< sc_lv<32> > data_2_V_V_TDATA_int;
    sc_signal< sc_logic > data_2_V_V_TVALID_int;
    sc_signal< sc_logic > data_2_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_2_V_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_3_V_V_U_apdone_blk;
    sc_signal< sc_lv<32> > data_3_V_V_TDATA_int;
    sc_signal< sc_logic > data_3_V_V_TVALID_int;
    sc_signal< sc_logic > data_3_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_3_V_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_4_V_V_U_apdone_blk;
    sc_signal< sc_lv<32> > data_4_V_V_TDATA_int;
    sc_signal< sc_logic > data_4_V_V_TVALID_int;
    sc_signal< sc_logic > data_4_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_4_V_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_data_5_V_V_U_apdone_blk;
    sc_signal< sc_lv<32> > data_5_V_V_TDATA_int;
    sc_signal< sc_logic > data_5_V_V_TVALID_int;
    sc_signal< sc_logic > data_5_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_data_5_V_V_U_ack_in;
    sc_signal< sc_logic > res1_0_V_V_TVALID_int;
    sc_signal< sc_logic > res1_0_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res1_0_V_V_U_vld_out;
    sc_signal< sc_logic > res1_1_V_V_TVALID_int;
    sc_signal< sc_logic > res1_1_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res1_1_V_V_U_vld_out;
    sc_signal< sc_logic > res1_2_V_V_TVALID_int;
    sc_signal< sc_logic > res1_2_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res1_2_V_V_U_vld_out;
    sc_signal< sc_logic > res1_3_V_V_TVALID_int;
    sc_signal< sc_logic > res1_3_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res1_3_V_V_U_vld_out;
    sc_signal< sc_logic > res1_4_V_V_TVALID_int;
    sc_signal< sc_logic > res1_4_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res1_4_V_V_U_vld_out;
    sc_signal< sc_logic > res1_5_V_V_TVALID_int;
    sc_signal< sc_logic > res1_5_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res1_5_V_V_U_vld_out;
    sc_signal< sc_logic > res2_0_V_V_TVALID_int;
    sc_signal< sc_logic > res2_0_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res2_0_V_V_U_vld_out;
    sc_signal< sc_logic > res2_1_V_V_TVALID_int;
    sc_signal< sc_logic > res2_1_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res2_1_V_V_U_vld_out;
    sc_signal< sc_logic > res2_2_V_V_TVALID_int;
    sc_signal< sc_logic > res2_2_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res2_2_V_V_U_vld_out;
    sc_signal< sc_logic > res2_3_V_V_TVALID_int;
    sc_signal< sc_logic > res2_3_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res2_3_V_V_U_vld_out;
    sc_signal< sc_logic > res2_4_V_V_TVALID_int;
    sc_signal< sc_logic > res2_4_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res2_4_V_V_U_vld_out;
    sc_signal< sc_logic > res2_5_V_V_TVALID_int;
    sc_signal< sc_logic > res2_5_V_V_TREADY_int;
    sc_signal< sc_logic > regslice_both_res2_5_V_V_U_vld_out;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<6> ap_const_lv6_39;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_data_0_V_V_TDATA_blk_n();
    void thread_data_0_V_V_TREADY();
    void thread_data_0_V_V_TREADY_int();
    void thread_data_1_V_V_TDATA_blk_n();
    void thread_data_1_V_V_TREADY();
    void thread_data_1_V_V_TREADY_int();
    void thread_data_2_V_V_TDATA_blk_n();
    void thread_data_2_V_V_TREADY();
    void thread_data_2_V_V_TREADY_int();
    void thread_data_3_V_V_TDATA_blk_n();
    void thread_data_3_V_V_TREADY();
    void thread_data_3_V_V_TREADY_int();
    void thread_data_4_V_V_TDATA_blk_n();
    void thread_data_4_V_V_TREADY();
    void thread_data_4_V_V_TREADY_int();
    void thread_data_5_V_V_TDATA_blk_n();
    void thread_data_5_V_V_TREADY();
    void thread_data_5_V_V_TREADY_int();
    void thread_i_fu_209_p2();
    void thread_icmp_ln107_fu_203_p2();
    void thread_res1_0_V_V_TDATA_blk_n();
    void thread_res1_0_V_V_TVALID();
    void thread_res1_0_V_V_TVALID_int();
    void thread_res1_1_V_V_TDATA_blk_n();
    void thread_res1_1_V_V_TVALID();
    void thread_res1_1_V_V_TVALID_int();
    void thread_res1_2_V_V_TDATA_blk_n();
    void thread_res1_2_V_V_TVALID();
    void thread_res1_2_V_V_TVALID_int();
    void thread_res1_3_V_V_TDATA_blk_n();
    void thread_res1_3_V_V_TVALID();
    void thread_res1_3_V_V_TVALID_int();
    void thread_res1_4_V_V_TDATA_blk_n();
    void thread_res1_4_V_V_TVALID();
    void thread_res1_4_V_V_TVALID_int();
    void thread_res1_5_V_V_TDATA_blk_n();
    void thread_res1_5_V_V_TVALID();
    void thread_res1_5_V_V_TVALID_int();
    void thread_res2_0_V_V_TDATA_blk_n();
    void thread_res2_0_V_V_TVALID();
    void thread_res2_0_V_V_TVALID_int();
    void thread_res2_1_V_V_TDATA_blk_n();
    void thread_res2_1_V_V_TVALID();
    void thread_res2_1_V_V_TVALID_int();
    void thread_res2_2_V_V_TDATA_blk_n();
    void thread_res2_2_V_V_TVALID();
    void thread_res2_2_V_V_TVALID_int();
    void thread_res2_3_V_V_TDATA_blk_n();
    void thread_res2_3_V_V_TVALID();
    void thread_res2_3_V_V_TVALID_int();
    void thread_res2_4_V_V_TDATA_blk_n();
    void thread_res2_4_V_V_TVALID();
    void thread_res2_4_V_V_TVALID_int();
    void thread_res2_5_V_V_TDATA_blk_n();
    void thread_res2_5_V_V_TVALID();
    void thread_res2_5_V_V_TVALID_int();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
