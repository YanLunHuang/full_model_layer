// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_ST_fsm_state1 = "1";
const sc_lv<7> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_ST_fsm_state2 = "10";
const sc_lv<7> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_ST_fsm_state3 = "100";
const sc_lv<7> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<7> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_ST_fsm_state6 = "10000";
const sc_lv<7> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_ST_fsm_pp2_stage0 = "100000";
const sc_lv<7> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_ST_fsm_state10 = "1000000";
const sc_lv<32> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_boolean_1 = true;
const sc_lv<32> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv32_3 = "11";
const bool sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_boolean_0 = false;
const sc_lv<1> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv1_0 = "0";
const sc_lv<32> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv32_5 = "101";
const sc_lv<32> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv32_1 = "1";
const sc_lv<32> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv32_2 = "10";
const sc_lv<1> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv1_1 = "1";
const sc_lv<32> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv32_4 = "100";
const sc_lv<8> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv8_0 = "00000000";
const sc_lv<13> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv13_0 = "0000000000000";
const sc_lv<8> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv8_80 = "10000000";
const sc_lv<8> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv8_1 = "1";
const sc_lv<13> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv13_1C80 = "1110010000000";
const sc_lv<13> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv13_1 = "1";
const sc_lv<32> sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::ap_const_lv32_6 = "110";

sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    acc_V_U = new sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s_acc_V("acc_V_U");
    acc_V_U->clk(ap_clk);
    acc_V_U->reset(ap_rst);
    acc_V_U->address0(acc_V_address0);
    acc_V_U->ce0(acc_V_ce0);
    acc_V_U->we0(acc_V_we0);
    acc_V_U->d0(ap_var_for_const0);
    acc_V_U->q0(acc_V_q0);
    acc_V_U->address1(acc_V_address1);
    acc_V_U->ce1(acc_V_ce1);
    acc_V_U->we1(acc_V_we1);
    acc_V_U->d1(acc_V_d1);
    acc_V_U->q1(acc_V_q1);
    regslice_both_data_V_V_U = new regslice_both<32>("regslice_both_data_V_V_U");
    regslice_both_data_V_V_U->ap_clk(ap_clk);
    regslice_both_data_V_V_U->ap_rst(ap_rst);
    regslice_both_data_V_V_U->data_in(data_V_V_TDATA);
    regslice_both_data_V_V_U->vld_in(data_V_V_TVALID);
    regslice_both_data_V_V_U->ack_in(regslice_both_data_V_V_U_ack_in);
    regslice_both_data_V_V_U->data_out(data_V_V_TDATA_int);
    regslice_both_data_V_V_U->vld_out(data_V_V_TVALID_int);
    regslice_both_data_V_V_U->ack_out(data_V_V_TREADY_int);
    regslice_both_data_V_V_U->apdone_blk(regslice_both_data_V_V_U_apdone_blk);
    regslice_both_res_V_V_U = new regslice_both<32>("regslice_both_res_V_V_U");
    regslice_both_res_V_V_U->ap_clk(ap_clk);
    regslice_both_res_V_V_U->ap_rst(ap_rst);
    regslice_both_res_V_V_U->data_in(acc_V_q1);
    regslice_both_res_V_V_U->vld_in(res_V_V_TVALID_int);
    regslice_both_res_V_V_U->ack_in(res_V_V_TREADY_int);
    regslice_both_res_V_V_U->data_out(res_V_V_TDATA);
    regslice_both_res_V_V_U->vld_out(regslice_both_res_V_V_U_vld_out);
    regslice_both_res_V_V_U->ack_out(res_V_V_TREADY);
    regslice_both_res_V_V_U->apdone_blk(regslice_both_res_V_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_V_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln331_fu_163_p1 );
    sensitive << ( zext_ln337_fu_194_p1 );

    SC_METHOD(thread_acc_V_address1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( acc_V_addr_2_reg_250 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( zext_ln342_fu_223_p1 );

    SC_METHOD(thread_acc_V_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_acc_V_ce1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_acc_V_d1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_V_1_reg_245 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( acc_V_q0 );

    SC_METHOD(thread_acc_V_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln329_fu_151_p2 );

    SC_METHOD(thread_acc_V_we1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( icmp_ln333_reg_236 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_add_ln333_fu_174_p2);
    sensitive << ( indvar_flatten_reg_118 );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln333_fu_168_p2 );
    sensitive << ( data_V_V_TVALID_int );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln333_fu_168_p2 );
    sensitive << ( data_V_V_TVALID_int );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_01001);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_block_state8_io );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state4_pp1_stage0_iter0);
    sensitive << ( icmp_ln333_fu_168_p2 );
    sensitive << ( data_V_V_TVALID_int );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state8_io);
    sensitive << ( icmp_ln340_reg_261 );
    sensitive << ( res_V_V_TREADY_int );

    SC_METHOD(thread_ap_block_state8_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( icmp_ln340_reg_261_pp2_iter1_reg );
    sensitive << ( res_V_V_TREADY_int );

    SC_METHOD(thread_ap_block_state9_pp2_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state4);
    sensitive << ( icmp_ln333_fu_168_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state7);
    sensitive << ( icmp_ln340_fu_211_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( regslice_both_res_V_V_U_apdone_blk );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( regslice_both_res_V_V_U_apdone_blk );

    SC_METHOD(thread_data_V_V_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln333_fu_168_p2 );
    sensitive << ( data_V_V_TVALID_int );

    SC_METHOD(thread_data_V_V_TREADY);
    sensitive << ( data_V_V_TVALID );
    sensitive << ( regslice_both_data_V_V_U_ack_in );

    SC_METHOD(thread_data_V_V_TREADY_int);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln333_fu_168_p2 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_i_1_fu_217_p2);
    sensitive << ( i2_0_i_reg_140 );

    SC_METHOD(thread_i_fu_157_p2);
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_icmp_ln329_fu_151_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_icmp_ln333_fu_168_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( indvar_flatten_reg_118 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_icmp_ln334_fu_180_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln333_fu_168_p2 );
    sensitive << ( k_0_i_reg_129 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_icmp_ln340_fu_211_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( i2_0_i_reg_140 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_k_fu_199_p2);
    sensitive << ( select_ln334_fu_186_p3 );

    SC_METHOD(thread_res_V_V_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( icmp_ln340_reg_261 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( icmp_ln340_reg_261_pp2_iter1_reg );
    sensitive << ( res_V_V_TREADY_int );

    SC_METHOD(thread_res_V_V_TVALID);
    sensitive << ( regslice_both_res_V_V_U_vld_out );

    SC_METHOD(thread_res_V_V_TVALID_int);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( icmp_ln340_reg_261 );
    sensitive << ( ap_block_pp2_stage0_11001 );

    SC_METHOD(thread_select_ln334_fu_186_p3);
    sensitive << ( k_0_i_reg_129 );
    sensitive << ( icmp_ln334_fu_180_p2 );

    SC_METHOD(thread_zext_ln331_fu_163_p1);
    sensitive << ( i_0_i_reg_107 );

    SC_METHOD(thread_zext_ln337_fu_194_p1);
    sensitive << ( select_ln334_fu_186_p3 );

    SC_METHOD(thread_zext_ln342_fu_223_p1);
    sensitive << ( i2_0_i_reg_140 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln333_fu_168_p2 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln340_fu_211_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( icmp_ln329_fu_151_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( regslice_both_res_V_V_U_apdone_blk );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_V_V_TDATA, "(port)data_V_V_TDATA");
    sc_trace(mVcdFile, data_V_V_TVALID, "(port)data_V_V_TVALID");
    sc_trace(mVcdFile, data_V_V_TREADY, "(port)data_V_V_TREADY");
    sc_trace(mVcdFile, res_V_V_TDATA, "(port)res_V_V_TDATA");
    sc_trace(mVcdFile, res_V_V_TVALID, "(port)res_V_V_TVALID");
    sc_trace(mVcdFile, res_V_V_TREADY, "(port)res_V_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, data_V_V_TDATA_blk_n, "data_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln333_fu_168_p2, "icmp_ln333_fu_168_p2");
    sc_trace(mVcdFile, res_V_V_TDATA_blk_n, "res_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, icmp_ln340_reg_261, "icmp_ln340_reg_261");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter2, "ap_enable_reg_pp2_iter2");
    sc_trace(mVcdFile, icmp_ln340_reg_261_pp2_iter1_reg, "icmp_ln340_reg_261_pp2_iter1_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_118, "indvar_flatten_reg_118");
    sc_trace(mVcdFile, k_0_i_reg_129, "k_0_i_reg_129");
    sc_trace(mVcdFile, i2_0_i_reg_140, "i2_0_i_reg_140");
    sc_trace(mVcdFile, i_fu_157_p2, "i_fu_157_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln333_reg_236, "icmp_ln333_reg_236");
    sc_trace(mVcdFile, ap_block_state4_pp1_stage0_iter0, "ap_block_state4_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter1, "ap_block_state5_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, add_ln333_fu_174_p2, "add_ln333_fu_174_p2");
    sc_trace(mVcdFile, tmp_V_1_reg_245, "tmp_V_1_reg_245");
    sc_trace(mVcdFile, acc_V_addr_2_reg_250, "acc_V_addr_2_reg_250");
    sc_trace(mVcdFile, k_fu_199_p2, "k_fu_199_p2");
    sc_trace(mVcdFile, icmp_ln340_fu_211_p2, "icmp_ln340_fu_211_p2");
    sc_trace(mVcdFile, ap_block_state7_pp2_stage0_iter0, "ap_block_state7_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp2_stage0_iter1, "ap_block_state8_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_io, "ap_block_state8_io");
    sc_trace(mVcdFile, ap_block_state9_pp2_stage0_iter2, "ap_block_state9_pp2_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, i_1_fu_217_p2, "i_1_fu_217_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, acc_V_q1, "acc_V_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state4, "ap_condition_pp1_exit_iter0_state4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state7, "ap_condition_pp2_exit_iter0_state7");
    sc_trace(mVcdFile, acc_V_address0, "acc_V_address0");
    sc_trace(mVcdFile, acc_V_ce0, "acc_V_ce0");
    sc_trace(mVcdFile, acc_V_we0, "acc_V_we0");
    sc_trace(mVcdFile, acc_V_q0, "acc_V_q0");
    sc_trace(mVcdFile, acc_V_address1, "acc_V_address1");
    sc_trace(mVcdFile, acc_V_ce1, "acc_V_ce1");
    sc_trace(mVcdFile, acc_V_we1, "acc_V_we1");
    sc_trace(mVcdFile, acc_V_d1, "acc_V_d1");
    sc_trace(mVcdFile, i_0_i_reg_107, "i_0_i_reg_107");
    sc_trace(mVcdFile, icmp_ln329_fu_151_p2, "icmp_ln329_fu_151_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, zext_ln331_fu_163_p1, "zext_ln331_fu_163_p1");
    sc_trace(mVcdFile, zext_ln337_fu_194_p1, "zext_ln337_fu_194_p1");
    sc_trace(mVcdFile, zext_ln342_fu_223_p1, "zext_ln342_fu_223_p1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_01001, "ap_block_pp2_stage0_01001");
    sc_trace(mVcdFile, icmp_ln334_fu_180_p2, "icmp_ln334_fu_180_p2");
    sc_trace(mVcdFile, select_ln334_fu_186_p3, "select_ln334_fu_186_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, regslice_both_res_V_V_U_apdone_blk, "regslice_both_res_V_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, regslice_both_data_V_V_U_apdone_blk, "regslice_both_data_V_V_U_apdone_blk");
    sc_trace(mVcdFile, data_V_V_TDATA_int, "data_V_V_TDATA_int");
    sc_trace(mVcdFile, data_V_V_TVALID_int, "data_V_V_TVALID_int");
    sc_trace(mVcdFile, data_V_V_TREADY_int, "data_V_V_TREADY_int");
    sc_trace(mVcdFile, regslice_both_data_V_V_U_ack_in, "regslice_both_data_V_V_U_ack_in");
    sc_trace(mVcdFile, res_V_V_TVALID_int, "res_V_V_TVALID_int");
    sc_trace(mVcdFile, res_V_V_TREADY_int, "res_V_V_TREADY_int");
    sc_trace(mVcdFile, regslice_both_res_V_V_U_vld_out, "regslice_both_res_V_V_U_vld_out");
#endif

    }
}

sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::~sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete acc_V_U;
    delete regslice_both_data_V_V_U;
    delete regslice_both_res_V_V_U;
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    esl_seteq<1,1,1>(regslice_both_res_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state4.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state4.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state7.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state7.read())) {
                ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state7.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter2 = ap_enable_reg_pp2_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp2_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i2_0_i_reg_140 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln340_fu_211_p2.read()))) {
        i2_0_i_reg_140 = i_1_fu_217_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_i_reg_107 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln329_fu_151_p2.read()))) {
        i_0_i_reg_107 = i_fu_157_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvar_flatten_reg_118 = ap_const_lv13_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_118 = add_ln333_fu_174_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        k_0_i_reg_129 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        k_0_i_reg_129 = k_fu_199_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        acc_V_addr_2_reg_250 =  (sc_lv<7>) (zext_ln337_fu_194_p1.read());
        tmp_V_1_reg_245 = data_V_V_TDATA_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln333_reg_236 = icmp_ln333_fu_168_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln340_reg_261 = icmp_ln340_fu_211_p2.read();
        icmp_ln340_reg_261_pp2_iter1_reg = icmp_ln340_reg_261.read();
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_acc_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        acc_V_address0 =  (sc_lv<7>) (zext_ln337_fu_194_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        acc_V_address0 =  (sc_lv<7>) (zext_ln331_fu_163_p1.read());
    } else {
        acc_V_address0 = "XXXXXXX";
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_acc_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        acc_V_address1 =  (sc_lv<7>) (zext_ln342_fu_223_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        acc_V_address1 = acc_V_addr_2_reg_250.read();
    } else {
        acc_V_address1 = "XXXXXXX";
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_acc_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        acc_V_ce0 = ap_const_logic_1;
    } else {
        acc_V_ce0 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_acc_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())))) {
        acc_V_ce1 = ap_const_logic_1;
    } else {
        acc_V_ce1 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_acc_V_d1() {
    acc_V_d1 = (!tmp_V_1_reg_245.read().is_01() || !acc_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_V_1_reg_245.read()) + sc_biguint<32>(acc_V_q0.read()));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_acc_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln329_fu_151_p2.read()))) {
        acc_V_we0 = ap_const_logic_1;
    } else {
        acc_V_we0 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_acc_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln333_reg_236.read()))) {
        acc_V_we1 = ap_const_logic_1;
    } else {
        acc_V_we1 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_add_ln333_fu_174_p2() {
    add_ln333_fu_174_p2 = (!indvar_flatten_reg_118.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(indvar_flatten_reg_118.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[5];
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[6];
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_TVALID_int.read()));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_TVALID_int.read()));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_pp2_stage0_01001() {
    ap_block_pp2_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state4_pp1_stage0_iter0() {
    ap_block_state4_pp1_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_V_V_TVALID_int.read()));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state5_pp1_stage0_iter1() {
    ap_block_state5_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state7_pp2_stage0_iter0() {
    ap_block_state7_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state8_io() {
    ap_block_state8_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln340_reg_261.read()) && esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_TREADY_int.read()));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state8_pp2_stage0_iter1() {
    ap_block_state8_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln340_reg_261_pp2_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, res_V_V_TREADY_int.read()));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_block_state9_pp2_stage0_iter2() {
    ap_block_state9_pp2_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_condition_pp1_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state4 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_condition_pp2_exit_iter0_state7() {
    if (esl_seteq<1,1,1>(icmp_ln340_fu_211_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state7 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state7 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(regslice_both_res_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter2.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(regslice_both_res_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_data_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0))) {
        data_V_V_TDATA_blk_n = data_V_V_TVALID_int.read();
    } else {
        data_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_data_V_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, data_V_V_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_V_V_U_ack_in.read()))) {
        data_V_V_TREADY = ap_const_logic_1;
    } else {
        data_V_V_TREADY = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_data_V_V_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        data_V_V_TREADY_int = ap_const_logic_1;
    } else {
        data_V_V_TREADY_int = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_i_1_fu_217_p2() {
    i_1_fu_217_p2 = (!i2_0_i_reg_140.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i2_0_i_reg_140.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_i_fu_157_p2() {
    i_fu_157_p2 = (!i_0_i_reg_107.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_0_i_reg_107.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_icmp_ln329_fu_151_p2() {
    icmp_ln329_fu_151_p2 = (!i_0_i_reg_107.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_107.read() == ap_const_lv8_80);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_icmp_ln333_fu_168_p2() {
    icmp_ln333_fu_168_p2 = (!indvar_flatten_reg_118.read().is_01() || !ap_const_lv13_1C80.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_118.read() == ap_const_lv13_1C80);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_icmp_ln334_fu_180_p2() {
    icmp_ln334_fu_180_p2 = (!k_0_i_reg_129.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(k_0_i_reg_129.read() == ap_const_lv8_80);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_icmp_ln340_fu_211_p2() {
    icmp_ln340_fu_211_p2 = (!i2_0_i_reg_140.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_i_reg_140.read() == ap_const_lv8_80);
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_k_fu_199_p2() {
    k_fu_199_p2 = (!select_ln334_fu_186_p3.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(select_ln334_fu_186_p3.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_res_V_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln340_reg_261.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln340_reg_261_pp2_iter1_reg.read())))) {
        res_V_V_TDATA_blk_n = res_V_V_TREADY_int.read();
    } else {
        res_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_res_V_V_TVALID() {
    res_V_V_TVALID = regslice_both_res_V_V_U_vld_out.read();
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_res_V_V_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln340_reg_261.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        res_V_V_TVALID_int = ap_const_logic_1;
    } else {
        res_V_V_TVALID_int = ap_const_logic_0;
    }
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_select_ln334_fu_186_p3() {
    select_ln334_fu_186_p3 = (!icmp_ln334_fu_180_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln334_fu_180_p2.read()[0].to_bool())? ap_const_lv8_0: k_0_i_reg_129.read());
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_zext_ln331_fu_163_p1() {
    zext_ln331_fu_163_p1 = esl_zext<64,8>(i_0_i_reg_107.read());
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_zext_ln337_fu_194_p1() {
    zext_ln337_fu_194_p1 = esl_zext<64,8>(select_ln334_fu_186_p3.read());
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_zext_ln342_fu_223_p1() {
    zext_ln342_fu_223_p1 = esl_zext<64,8>(i2_0_i_reg_140.read());
}

void sum1d_switch_ap_fixed_ap_fixed_32_16_5_3_0_config12_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln329_fu_151_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln333_fu_168_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 32 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln340_fu_211_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln340_fu_211_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp2_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(regslice_both_res_V_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

