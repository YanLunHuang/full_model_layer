// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clone_stream_switch_ap_fixed_ap_fixed_config103_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_V_TDATA,
        data_0_V_V_TVALID,
        data_0_V_V_TREADY,
        data_1_V_V_TDATA,
        data_1_V_V_TVALID,
        data_1_V_V_TREADY,
        data_2_V_V_TDATA,
        data_2_V_V_TVALID,
        data_2_V_V_TREADY,
        data_3_V_V_TDATA,
        data_3_V_V_TVALID,
        data_3_V_V_TREADY,
        data_4_V_V_TDATA,
        data_4_V_V_TVALID,
        data_4_V_V_TREADY,
        data_5_V_V_TDATA,
        data_5_V_V_TVALID,
        data_5_V_V_TREADY,
        res1_0_V_V_TDATA,
        res1_0_V_V_TVALID,
        res1_0_V_V_TREADY,
        res1_1_V_V_TDATA,
        res1_1_V_V_TVALID,
        res1_1_V_V_TREADY,
        res1_2_V_V_TDATA,
        res1_2_V_V_TVALID,
        res1_2_V_V_TREADY,
        res1_3_V_V_TDATA,
        res1_3_V_V_TVALID,
        res1_3_V_V_TREADY,
        res1_4_V_V_TDATA,
        res1_4_V_V_TVALID,
        res1_4_V_V_TREADY,
        res1_5_V_V_TDATA,
        res1_5_V_V_TVALID,
        res1_5_V_V_TREADY,
        res2_0_V_V_TDATA,
        res2_0_V_V_TVALID,
        res2_0_V_V_TREADY,
        res2_1_V_V_TDATA,
        res2_1_V_V_TVALID,
        res2_1_V_V_TREADY,
        res2_2_V_V_TDATA,
        res2_2_V_V_TVALID,
        res2_2_V_V_TREADY,
        res2_3_V_V_TDATA,
        res2_3_V_V_TVALID,
        res2_3_V_V_TREADY,
        res2_4_V_V_TDATA,
        res2_4_V_V_TVALID,
        res2_4_V_V_TREADY,
        res2_5_V_V_TDATA,
        res2_5_V_V_TVALID,
        res2_5_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] data_0_V_V_TDATA;
input   data_0_V_V_TVALID;
output   data_0_V_V_TREADY;
input  [31:0] data_1_V_V_TDATA;
input   data_1_V_V_TVALID;
output   data_1_V_V_TREADY;
input  [31:0] data_2_V_V_TDATA;
input   data_2_V_V_TVALID;
output   data_2_V_V_TREADY;
input  [31:0] data_3_V_V_TDATA;
input   data_3_V_V_TVALID;
output   data_3_V_V_TREADY;
input  [31:0] data_4_V_V_TDATA;
input   data_4_V_V_TVALID;
output   data_4_V_V_TREADY;
input  [31:0] data_5_V_V_TDATA;
input   data_5_V_V_TVALID;
output   data_5_V_V_TREADY;
output  [31:0] res1_0_V_V_TDATA;
output   res1_0_V_V_TVALID;
input   res1_0_V_V_TREADY;
output  [31:0] res1_1_V_V_TDATA;
output   res1_1_V_V_TVALID;
input   res1_1_V_V_TREADY;
output  [31:0] res1_2_V_V_TDATA;
output   res1_2_V_V_TVALID;
input   res1_2_V_V_TREADY;
output  [31:0] res1_3_V_V_TDATA;
output   res1_3_V_V_TVALID;
input   res1_3_V_V_TREADY;
output  [31:0] res1_4_V_V_TDATA;
output   res1_4_V_V_TVALID;
input   res1_4_V_V_TREADY;
output  [31:0] res1_5_V_V_TDATA;
output   res1_5_V_V_TVALID;
input   res1_5_V_V_TREADY;
output  [31:0] res2_0_V_V_TDATA;
output   res2_0_V_V_TVALID;
input   res2_0_V_V_TREADY;
output  [31:0] res2_1_V_V_TDATA;
output   res2_1_V_V_TVALID;
input   res2_1_V_V_TREADY;
output  [31:0] res2_2_V_V_TDATA;
output   res2_2_V_V_TVALID;
input   res2_2_V_V_TREADY;
output  [31:0] res2_3_V_V_TDATA;
output   res2_3_V_V_TVALID;
input   res2_3_V_V_TREADY;
output  [31:0] res2_4_V_V_TDATA;
output   res2_4_V_V_TVALID;
input   res2_4_V_V_TREADY;
output  [31:0] res2_5_V_V_TDATA;
output   res2_5_V_V_TVALID;
input   res2_5_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_0_V_V_TREADY;
reg data_1_V_V_TREADY;
reg data_2_V_V_TREADY;
reg data_3_V_V_TREADY;
reg data_4_V_V_TREADY;
reg data_5_V_V_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    data_0_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln107_fu_203_p2;
reg    data_1_V_V_TDATA_blk_n;
reg    data_2_V_V_TDATA_blk_n;
reg    data_3_V_V_TDATA_blk_n;
reg    data_4_V_V_TDATA_blk_n;
reg    data_5_V_V_TDATA_blk_n;
reg    res1_0_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln107_reg_215;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln107_reg_215_pp0_iter1_reg;
reg    res1_1_V_V_TDATA_blk_n;
reg    res1_2_V_V_TDATA_blk_n;
reg    res1_3_V_V_TDATA_blk_n;
reg    res1_4_V_V_TDATA_blk_n;
reg    res1_5_V_V_TDATA_blk_n;
reg    res2_0_V_V_TDATA_blk_n;
reg    res2_1_V_V_TDATA_blk_n;
reg    res2_2_V_V_TDATA_blk_n;
reg    res2_3_V_V_TDATA_blk_n;
reg    res2_4_V_V_TDATA_blk_n;
reg    res2_5_V_V_TDATA_blk_n;
reg   [5:0] i_0_i_reg_192;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] i_fu_209_p2;
reg   [31:0] tmp_V_reg_224;
reg   [31:0] tmp_V_1_reg_230;
reg   [31:0] tmp_V_2_reg_236;
reg   [31:0] tmp_V_3_reg_242;
reg   [31:0] tmp_V_4_reg_248;
reg   [31:0] tmp_V_5_reg_254;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage0_01001;
wire    ap_CS_fsm_state5;
wire    regslice_both_res1_0_V_V_U_apdone_blk;
wire    regslice_both_res1_1_V_V_U_apdone_blk;
wire    regslice_both_res1_2_V_V_U_apdone_blk;
wire    regslice_both_res1_3_V_V_U_apdone_blk;
wire    regslice_both_res1_4_V_V_U_apdone_blk;
wire    regslice_both_res1_5_V_V_U_apdone_blk;
wire    regslice_both_res2_0_V_V_U_apdone_blk;
wire    regslice_both_res2_1_V_V_U_apdone_blk;
wire    regslice_both_res2_2_V_V_U_apdone_blk;
wire    regslice_both_res2_3_V_V_U_apdone_blk;
wire    regslice_both_res2_4_V_V_U_apdone_blk;
wire    regslice_both_res2_5_V_V_U_apdone_blk;
reg    ap_block_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_data_0_V_V_U_apdone_blk;
wire   [31:0] data_0_V_V_TDATA_int;
wire    data_0_V_V_TVALID_int;
reg    data_0_V_V_TREADY_int;
wire    regslice_both_data_0_V_V_U_ack_in;
wire    regslice_both_data_1_V_V_U_apdone_blk;
wire   [31:0] data_1_V_V_TDATA_int;
wire    data_1_V_V_TVALID_int;
reg    data_1_V_V_TREADY_int;
wire    regslice_both_data_1_V_V_U_ack_in;
wire    regslice_both_data_2_V_V_U_apdone_blk;
wire   [31:0] data_2_V_V_TDATA_int;
wire    data_2_V_V_TVALID_int;
reg    data_2_V_V_TREADY_int;
wire    regslice_both_data_2_V_V_U_ack_in;
wire    regslice_both_data_3_V_V_U_apdone_blk;
wire   [31:0] data_3_V_V_TDATA_int;
wire    data_3_V_V_TVALID_int;
reg    data_3_V_V_TREADY_int;
wire    regslice_both_data_3_V_V_U_ack_in;
wire    regslice_both_data_4_V_V_U_apdone_blk;
wire   [31:0] data_4_V_V_TDATA_int;
wire    data_4_V_V_TVALID_int;
reg    data_4_V_V_TREADY_int;
wire    regslice_both_data_4_V_V_U_ack_in;
wire    regslice_both_data_5_V_V_U_apdone_blk;
wire   [31:0] data_5_V_V_TDATA_int;
wire    data_5_V_V_TVALID_int;
reg    data_5_V_V_TREADY_int;
wire    regslice_both_data_5_V_V_U_ack_in;
reg    res1_0_V_V_TVALID_int;
wire    res1_0_V_V_TREADY_int;
wire    regslice_both_res1_0_V_V_U_vld_out;
reg    res1_1_V_V_TVALID_int;
wire    res1_1_V_V_TREADY_int;
wire    regslice_both_res1_1_V_V_U_vld_out;
reg    res1_2_V_V_TVALID_int;
wire    res1_2_V_V_TREADY_int;
wire    regslice_both_res1_2_V_V_U_vld_out;
reg    res1_3_V_V_TVALID_int;
wire    res1_3_V_V_TREADY_int;
wire    regslice_both_res1_3_V_V_U_vld_out;
reg    res1_4_V_V_TVALID_int;
wire    res1_4_V_V_TREADY_int;
wire    regslice_both_res1_4_V_V_U_vld_out;
reg    res1_5_V_V_TVALID_int;
wire    res1_5_V_V_TREADY_int;
wire    regslice_both_res1_5_V_V_U_vld_out;
reg    res2_0_V_V_TVALID_int;
wire    res2_0_V_V_TREADY_int;
wire    regslice_both_res2_0_V_V_U_vld_out;
reg    res2_1_V_V_TVALID_int;
wire    res2_1_V_V_TREADY_int;
wire    regslice_both_res2_1_V_V_U_vld_out;
reg    res2_2_V_V_TVALID_int;
wire    res2_2_V_V_TREADY_int;
wire    regslice_both_res2_2_V_V_U_vld_out;
reg    res2_3_V_V_TVALID_int;
wire    res2_3_V_V_TREADY_int;
wire    regslice_both_res2_3_V_V_U_vld_out;
reg    res2_4_V_V_TVALID_int;
wire    res2_4_V_V_TREADY_int;
wire    regslice_both_res2_4_V_V_U_vld_out;
reg    res2_5_V_V_TVALID_int;
wire    res2_5_V_V_TREADY_int;
wire    regslice_both_res2_5_V_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_0_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_0_V_V_TDATA),
    .vld_in(data_0_V_V_TVALID),
    .ack_in(regslice_both_data_0_V_V_U_ack_in),
    .data_out(data_0_V_V_TDATA_int),
    .vld_out(data_0_V_V_TVALID_int),
    .ack_out(data_0_V_V_TREADY_int),
    .apdone_blk(regslice_both_data_0_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_1_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_1_V_V_TDATA),
    .vld_in(data_1_V_V_TVALID),
    .ack_in(regslice_both_data_1_V_V_U_ack_in),
    .data_out(data_1_V_V_TDATA_int),
    .vld_out(data_1_V_V_TVALID_int),
    .ack_out(data_1_V_V_TREADY_int),
    .apdone_blk(regslice_both_data_1_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_2_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_2_V_V_TDATA),
    .vld_in(data_2_V_V_TVALID),
    .ack_in(regslice_both_data_2_V_V_U_ack_in),
    .data_out(data_2_V_V_TDATA_int),
    .vld_out(data_2_V_V_TVALID_int),
    .ack_out(data_2_V_V_TREADY_int),
    .apdone_blk(regslice_both_data_2_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_3_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_3_V_V_TDATA),
    .vld_in(data_3_V_V_TVALID),
    .ack_in(regslice_both_data_3_V_V_U_ack_in),
    .data_out(data_3_V_V_TDATA_int),
    .vld_out(data_3_V_V_TVALID_int),
    .ack_out(data_3_V_V_TREADY_int),
    .apdone_blk(regslice_both_data_3_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_4_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_4_V_V_TDATA),
    .vld_in(data_4_V_V_TVALID),
    .ack_in(regslice_both_data_4_V_V_U_ack_in),
    .data_out(data_4_V_V_TDATA_int),
    .vld_out(data_4_V_V_TVALID_int),
    .ack_out(data_4_V_V_TREADY_int),
    .apdone_blk(regslice_both_data_4_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_5_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data_5_V_V_TDATA),
    .vld_in(data_5_V_V_TVALID),
    .ack_in(regslice_both_data_5_V_V_U_ack_in),
    .data_out(data_5_V_V_TDATA_int),
    .vld_out(data_5_V_V_TVALID_int),
    .ack_out(data_5_V_V_TREADY_int),
    .apdone_blk(regslice_both_data_5_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res1_0_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_reg_224),
    .vld_in(res1_0_V_V_TVALID_int),
    .ack_in(res1_0_V_V_TREADY_int),
    .data_out(res1_0_V_V_TDATA),
    .vld_out(regslice_both_res1_0_V_V_U_vld_out),
    .ack_out(res1_0_V_V_TREADY),
    .apdone_blk(regslice_both_res1_0_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res1_1_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_1_reg_230),
    .vld_in(res1_1_V_V_TVALID_int),
    .ack_in(res1_1_V_V_TREADY_int),
    .data_out(res1_1_V_V_TDATA),
    .vld_out(regslice_both_res1_1_V_V_U_vld_out),
    .ack_out(res1_1_V_V_TREADY),
    .apdone_blk(regslice_both_res1_1_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res1_2_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_2_reg_236),
    .vld_in(res1_2_V_V_TVALID_int),
    .ack_in(res1_2_V_V_TREADY_int),
    .data_out(res1_2_V_V_TDATA),
    .vld_out(regslice_both_res1_2_V_V_U_vld_out),
    .ack_out(res1_2_V_V_TREADY),
    .apdone_blk(regslice_both_res1_2_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res1_3_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_3_reg_242),
    .vld_in(res1_3_V_V_TVALID_int),
    .ack_in(res1_3_V_V_TREADY_int),
    .data_out(res1_3_V_V_TDATA),
    .vld_out(regslice_both_res1_3_V_V_U_vld_out),
    .ack_out(res1_3_V_V_TREADY),
    .apdone_blk(regslice_both_res1_3_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res1_4_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_4_reg_248),
    .vld_in(res1_4_V_V_TVALID_int),
    .ack_in(res1_4_V_V_TREADY_int),
    .data_out(res1_4_V_V_TDATA),
    .vld_out(regslice_both_res1_4_V_V_U_vld_out),
    .ack_out(res1_4_V_V_TREADY),
    .apdone_blk(regslice_both_res1_4_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res1_5_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_5_reg_254),
    .vld_in(res1_5_V_V_TVALID_int),
    .ack_in(res1_5_V_V_TREADY_int),
    .data_out(res1_5_V_V_TDATA),
    .vld_out(regslice_both_res1_5_V_V_U_vld_out),
    .ack_out(res1_5_V_V_TREADY),
    .apdone_blk(regslice_both_res1_5_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res2_0_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_reg_224),
    .vld_in(res2_0_V_V_TVALID_int),
    .ack_in(res2_0_V_V_TREADY_int),
    .data_out(res2_0_V_V_TDATA),
    .vld_out(regslice_both_res2_0_V_V_U_vld_out),
    .ack_out(res2_0_V_V_TREADY),
    .apdone_blk(regslice_both_res2_0_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res2_1_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_1_reg_230),
    .vld_in(res2_1_V_V_TVALID_int),
    .ack_in(res2_1_V_V_TREADY_int),
    .data_out(res2_1_V_V_TDATA),
    .vld_out(regslice_both_res2_1_V_V_U_vld_out),
    .ack_out(res2_1_V_V_TREADY),
    .apdone_blk(regslice_both_res2_1_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res2_2_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_2_reg_236),
    .vld_in(res2_2_V_V_TVALID_int),
    .ack_in(res2_2_V_V_TREADY_int),
    .data_out(res2_2_V_V_TDATA),
    .vld_out(regslice_both_res2_2_V_V_U_vld_out),
    .ack_out(res2_2_V_V_TREADY),
    .apdone_blk(regslice_both_res2_2_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res2_3_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_3_reg_242),
    .vld_in(res2_3_V_V_TVALID_int),
    .ack_in(res2_3_V_V_TREADY_int),
    .data_out(res2_3_V_V_TDATA),
    .vld_out(regslice_both_res2_3_V_V_U_vld_out),
    .ack_out(res2_3_V_V_TREADY),
    .apdone_blk(regslice_both_res2_3_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res2_4_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_4_reg_248),
    .vld_in(res2_4_V_V_TVALID_int),
    .ack_in(res2_4_V_V_TREADY_int),
    .data_out(res2_4_V_V_TDATA),
    .vld_out(regslice_both_res2_4_V_V_U_vld_out),
    .ack_out(res2_4_V_V_TREADY),
    .apdone_blk(regslice_both_res2_4_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res2_5_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_5_reg_254),
    .vld_in(res2_5_V_V_TVALID_int),
    .ack_in(res2_5_V_V_TREADY_int),
    .data_out(res2_5_V_V_TDATA),
    .vld_out(regslice_both_res2_5_V_V_U_vld_out),
    .ack_out(res2_5_V_V_TREADY),
    .apdone_blk(regslice_both_res2_5_V_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_res2_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_0_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_192 <= i_fu_209_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_192 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln107_reg_215 <= icmp_ln107_fu_203_p2;
        icmp_ln107_reg_215_pp0_iter1_reg <= icmp_ln107_reg_215;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_1_reg_230 <= data_1_V_V_TDATA_int;
        tmp_V_2_reg_236 <= data_2_V_V_TDATA_int;
        tmp_V_3_reg_242 <= data_3_V_V_TDATA_int;
        tmp_V_4_reg_248 <= data_4_V_V_TDATA_int;
        tmp_V_5_reg_254 <= data_5_V_V_TDATA_int;
        tmp_V_reg_224 <= data_0_V_V_TDATA_int;
    end
end

always @ (*) begin
    if ((icmp_ln107_fu_203_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_res2_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_0_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_res2_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_0_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_0_V_V_TDATA_blk_n = data_0_V_V_TVALID_int;
    end else begin
        data_0_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_0_V_V_U_ack_in == 1'b1) & (data_0_V_V_TVALID == 1'b1))) begin
        data_0_V_V_TREADY = 1'b1;
    end else begin
        data_0_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_0_V_V_TREADY_int = 1'b1;
    end else begin
        data_0_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_1_V_V_TDATA_blk_n = data_1_V_V_TVALID_int;
    end else begin
        data_1_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_1_V_V_U_ack_in == 1'b1) & (data_1_V_V_TVALID == 1'b1))) begin
        data_1_V_V_TREADY = 1'b1;
    end else begin
        data_1_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_1_V_V_TREADY_int = 1'b1;
    end else begin
        data_1_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_2_V_V_TDATA_blk_n = data_2_V_V_TVALID_int;
    end else begin
        data_2_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_2_V_V_U_ack_in == 1'b1) & (data_2_V_V_TVALID == 1'b1))) begin
        data_2_V_V_TREADY = 1'b1;
    end else begin
        data_2_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_2_V_V_TREADY_int = 1'b1;
    end else begin
        data_2_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_3_V_V_TDATA_blk_n = data_3_V_V_TVALID_int;
    end else begin
        data_3_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_3_V_V_U_ack_in == 1'b1) & (data_3_V_V_TVALID == 1'b1))) begin
        data_3_V_V_TREADY = 1'b1;
    end else begin
        data_3_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_3_V_V_TREADY_int = 1'b1;
    end else begin
        data_3_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_4_V_V_TDATA_blk_n = data_4_V_V_TVALID_int;
    end else begin
        data_4_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_4_V_V_U_ack_in == 1'b1) & (data_4_V_V_TVALID == 1'b1))) begin
        data_4_V_V_TREADY = 1'b1;
    end else begin
        data_4_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_4_V_V_TREADY_int = 1'b1;
    end else begin
        data_4_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_5_V_V_TDATA_blk_n = data_5_V_V_TVALID_int;
    end else begin
        data_5_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_both_data_5_V_V_U_ack_in == 1'b1) & (data_5_V_V_TVALID == 1'b1))) begin
        data_5_V_V_TREADY = 1'b1;
    end else begin
        data_5_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_fu_203_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_5_V_V_TREADY_int = 1'b1;
    end else begin
        data_5_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res1_0_V_V_TDATA_blk_n = res1_0_V_V_TREADY_int;
    end else begin
        res1_0_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res1_0_V_V_TVALID_int = 1'b1;
    end else begin
        res1_0_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res1_1_V_V_TDATA_blk_n = res1_1_V_V_TREADY_int;
    end else begin
        res1_1_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res1_1_V_V_TVALID_int = 1'b1;
    end else begin
        res1_1_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res1_2_V_V_TDATA_blk_n = res1_2_V_V_TREADY_int;
    end else begin
        res1_2_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res1_2_V_V_TVALID_int = 1'b1;
    end else begin
        res1_2_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res1_3_V_V_TDATA_blk_n = res1_3_V_V_TREADY_int;
    end else begin
        res1_3_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res1_3_V_V_TVALID_int = 1'b1;
    end else begin
        res1_3_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res1_4_V_V_TDATA_blk_n = res1_4_V_V_TREADY_int;
    end else begin
        res1_4_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res1_4_V_V_TVALID_int = 1'b1;
    end else begin
        res1_4_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res1_5_V_V_TDATA_blk_n = res1_5_V_V_TREADY_int;
    end else begin
        res1_5_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res1_5_V_V_TVALID_int = 1'b1;
    end else begin
        res1_5_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res2_0_V_V_TDATA_blk_n = res2_0_V_V_TREADY_int;
    end else begin
        res2_0_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res2_0_V_V_TVALID_int = 1'b1;
    end else begin
        res2_0_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res2_1_V_V_TDATA_blk_n = res2_1_V_V_TREADY_int;
    end else begin
        res2_1_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res2_1_V_V_TVALID_int = 1'b1;
    end else begin
        res2_1_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res2_2_V_V_TDATA_blk_n = res2_2_V_V_TREADY_int;
    end else begin
        res2_2_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res2_2_V_V_TVALID_int = 1'b1;
    end else begin
        res2_2_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res2_3_V_V_TDATA_blk_n = res2_3_V_V_TREADY_int;
    end else begin
        res2_3_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res2_3_V_V_TVALID_int = 1'b1;
    end else begin
        res2_3_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res2_4_V_V_TDATA_blk_n = res2_4_V_V_TREADY_int;
    end else begin
        res2_4_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res2_4_V_V_TVALID_int = 1'b1;
    end else begin
        res2_4_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        res2_5_V_V_TDATA_blk_n = res2_5_V_V_TREADY_int;
    end else begin
        res2_5_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_215 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        res2_5_V_V_TVALID_int = 1'b1;
    end else begin
        res2_5_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln107_fu_203_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln107_fu_203_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((regslice_both_res2_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_0_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln107_fu_203_p2 == 1'd0) & (data_5_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_4_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_3_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_2_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_1_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_0_V_V_TVALID_int == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln107_fu_203_p2 == 1'd0) & (data_5_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_4_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_3_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_2_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_1_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_0_V_V_TVALID_int == 1'b0)))) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (((icmp_ln107_fu_203_p2 == 1'd0) & (data_5_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_4_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_3_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_2_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_1_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_0_V_V_TVALID_int == 1'b0)))) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (((icmp_ln107_fu_203_p2 == 1'd0) & (data_5_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_4_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_3_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_2_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_1_V_V_TVALID_int == 1'b0)) | ((icmp_ln107_fu_203_p2 == 1'd0) & (data_0_V_V_TVALID_int == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = (((icmp_ln107_reg_215 == 1'd0) & (res2_5_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res2_4_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res2_3_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res2_2_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res2_1_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res2_0_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res1_5_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res1_4_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res1_3_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res1_2_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res1_1_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215 == 1'd0) & (res1_0_V_V_TREADY_int == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = (((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res2_5_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res2_4_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res2_3_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res2_2_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res2_1_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res2_0_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res1_5_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res1_4_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res1_3_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res1_2_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res1_1_V_V_TREADY_int == 1'b0)) | ((icmp_ln107_reg_215_pp0_iter1_reg == 1'd0) & (res1_0_V_V_TREADY_int == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5 = ((regslice_both_res2_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res2_0_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res1_0_V_V_U_apdone_blk == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_fu_209_p2 = (i_0_i_reg_192 + 6'd1);

assign icmp_ln107_fu_203_p2 = ((i_0_i_reg_192 == 6'd57) ? 1'b1 : 1'b0);

assign res1_0_V_V_TVALID = regslice_both_res1_0_V_V_U_vld_out;

assign res1_1_V_V_TVALID = regslice_both_res1_1_V_V_U_vld_out;

assign res1_2_V_V_TVALID = regslice_both_res1_2_V_V_U_vld_out;

assign res1_3_V_V_TVALID = regslice_both_res1_3_V_V_U_vld_out;

assign res1_4_V_V_TVALID = regslice_both_res1_4_V_V_U_vld_out;

assign res1_5_V_V_TVALID = regslice_both_res1_5_V_V_U_vld_out;

assign res2_0_V_V_TVALID = regslice_both_res2_0_V_V_U_vld_out;

assign res2_1_V_V_TVALID = regslice_both_res2_1_V_V_U_vld_out;

assign res2_2_V_V_TVALID = regslice_both_res2_2_V_V_U_vld_out;

assign res2_3_V_V_TVALID = regslice_both_res2_3_V_V_U_vld_out;

assign res2_4_V_V_TVALID = regslice_both_res2_4_V_V_U_vld_out;

assign res2_5_V_V_TVALID = regslice_both_res2_5_V_V_U_vld_out;

endmodule //clone_stream_switch_ap_fixed_ap_fixed_config103_s
