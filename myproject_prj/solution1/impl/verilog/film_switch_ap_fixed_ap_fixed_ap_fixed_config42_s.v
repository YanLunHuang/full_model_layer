// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module film_switch_ap_fixed_ap_fixed_ap_fixed_config42_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data1_0_V_V_TDATA,
        data1_0_V_V_TVALID,
        data1_0_V_V_TREADY,
        data1_1_V_V_TDATA,
        data1_1_V_V_TVALID,
        data1_1_V_V_TREADY,
        data1_2_V_V_TDATA,
        data1_2_V_V_TVALID,
        data1_2_V_V_TREADY,
        data1_3_V_V_TDATA,
        data1_3_V_V_TVALID,
        data1_3_V_V_TREADY,
        data1_4_V_V_TDATA,
        data1_4_V_V_TVALID,
        data1_4_V_V_TREADY,
        data1_5_V_V_TDATA,
        data1_5_V_V_TVALID,
        data1_5_V_V_TREADY,
        data1_6_V_V_TDATA,
        data1_6_V_V_TVALID,
        data1_6_V_V_TREADY,
        data1_7_V_V_TDATA,
        data1_7_V_V_TVALID,
        data1_7_V_V_TREADY,
        data1_8_V_V_TDATA,
        data1_8_V_V_TVALID,
        data1_8_V_V_TREADY,
        data1_9_V_V_TDATA,
        data1_9_V_V_TVALID,
        data1_9_V_V_TREADY,
        data1_10_V_V_TDATA,
        data1_10_V_V_TVALID,
        data1_10_V_V_TREADY,
        data1_11_V_V_TDATA,
        data1_11_V_V_TVALID,
        data1_11_V_V_TREADY,
        data1_12_V_V_TDATA,
        data1_12_V_V_TVALID,
        data1_12_V_V_TREADY,
        data1_13_V_V_TDATA,
        data1_13_V_V_TVALID,
        data1_13_V_V_TREADY,
        data1_14_V_V_TDATA,
        data1_14_V_V_TVALID,
        data1_14_V_V_TREADY,
        data1_15_V_V_TDATA,
        data1_15_V_V_TVALID,
        data1_15_V_V_TREADY,
        data2_V_V_TDATA,
        data2_V_V_TVALID,
        data2_V_V_TREADY,
        res_0_V_V_TDATA,
        res_0_V_V_TVALID,
        res_0_V_V_TREADY,
        res_1_V_V_TDATA,
        res_1_V_V_TVALID,
        res_1_V_V_TREADY,
        res_2_V_V_TDATA,
        res_2_V_V_TVALID,
        res_2_V_V_TREADY,
        res_3_V_V_TDATA,
        res_3_V_V_TVALID,
        res_3_V_V_TREADY,
        res_4_V_V_TDATA,
        res_4_V_V_TVALID,
        res_4_V_V_TREADY,
        res_5_V_V_TDATA,
        res_5_V_V_TVALID,
        res_5_V_V_TREADY,
        res_6_V_V_TDATA,
        res_6_V_V_TVALID,
        res_6_V_V_TREADY,
        res_7_V_V_TDATA,
        res_7_V_V_TVALID,
        res_7_V_V_TREADY,
        res_8_V_V_TDATA,
        res_8_V_V_TVALID,
        res_8_V_V_TREADY,
        res_9_V_V_TDATA,
        res_9_V_V_TVALID,
        res_9_V_V_TREADY,
        res_10_V_V_TDATA,
        res_10_V_V_TVALID,
        res_10_V_V_TREADY,
        res_11_V_V_TDATA,
        res_11_V_V_TVALID,
        res_11_V_V_TREADY,
        res_12_V_V_TDATA,
        res_12_V_V_TVALID,
        res_12_V_V_TREADY,
        res_13_V_V_TDATA,
        res_13_V_V_TVALID,
        res_13_V_V_TREADY,
        res_14_V_V_TDATA,
        res_14_V_V_TVALID,
        res_14_V_V_TREADY,
        res_15_V_V_TDATA,
        res_15_V_V_TVALID,
        res_15_V_V_TREADY
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state7 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] data1_0_V_V_TDATA;
input   data1_0_V_V_TVALID;
output   data1_0_V_V_TREADY;
input  [31:0] data1_1_V_V_TDATA;
input   data1_1_V_V_TVALID;
output   data1_1_V_V_TREADY;
input  [31:0] data1_2_V_V_TDATA;
input   data1_2_V_V_TVALID;
output   data1_2_V_V_TREADY;
input  [31:0] data1_3_V_V_TDATA;
input   data1_3_V_V_TVALID;
output   data1_3_V_V_TREADY;
input  [31:0] data1_4_V_V_TDATA;
input   data1_4_V_V_TVALID;
output   data1_4_V_V_TREADY;
input  [31:0] data1_5_V_V_TDATA;
input   data1_5_V_V_TVALID;
output   data1_5_V_V_TREADY;
input  [31:0] data1_6_V_V_TDATA;
input   data1_6_V_V_TVALID;
output   data1_6_V_V_TREADY;
input  [31:0] data1_7_V_V_TDATA;
input   data1_7_V_V_TVALID;
output   data1_7_V_V_TREADY;
input  [31:0] data1_8_V_V_TDATA;
input   data1_8_V_V_TVALID;
output   data1_8_V_V_TREADY;
input  [31:0] data1_9_V_V_TDATA;
input   data1_9_V_V_TVALID;
output   data1_9_V_V_TREADY;
input  [31:0] data1_10_V_V_TDATA;
input   data1_10_V_V_TVALID;
output   data1_10_V_V_TREADY;
input  [31:0] data1_11_V_V_TDATA;
input   data1_11_V_V_TVALID;
output   data1_11_V_V_TREADY;
input  [31:0] data1_12_V_V_TDATA;
input   data1_12_V_V_TVALID;
output   data1_12_V_V_TREADY;
input  [31:0] data1_13_V_V_TDATA;
input   data1_13_V_V_TVALID;
output   data1_13_V_V_TREADY;
input  [31:0] data1_14_V_V_TDATA;
input   data1_14_V_V_TVALID;
output   data1_14_V_V_TREADY;
input  [31:0] data1_15_V_V_TDATA;
input   data1_15_V_V_TVALID;
output   data1_15_V_V_TREADY;
input  [31:0] data2_V_V_TDATA;
input   data2_V_V_TVALID;
output   data2_V_V_TREADY;
output  [31:0] res_0_V_V_TDATA;
output   res_0_V_V_TVALID;
input   res_0_V_V_TREADY;
output  [31:0] res_1_V_V_TDATA;
output   res_1_V_V_TVALID;
input   res_1_V_V_TREADY;
output  [31:0] res_2_V_V_TDATA;
output   res_2_V_V_TVALID;
input   res_2_V_V_TREADY;
output  [31:0] res_3_V_V_TDATA;
output   res_3_V_V_TVALID;
input   res_3_V_V_TREADY;
output  [31:0] res_4_V_V_TDATA;
output   res_4_V_V_TVALID;
input   res_4_V_V_TREADY;
output  [31:0] res_5_V_V_TDATA;
output   res_5_V_V_TVALID;
input   res_5_V_V_TREADY;
output  [31:0] res_6_V_V_TDATA;
output   res_6_V_V_TVALID;
input   res_6_V_V_TREADY;
output  [31:0] res_7_V_V_TDATA;
output   res_7_V_V_TVALID;
input   res_7_V_V_TREADY;
output  [31:0] res_8_V_V_TDATA;
output   res_8_V_V_TVALID;
input   res_8_V_V_TREADY;
output  [31:0] res_9_V_V_TDATA;
output   res_9_V_V_TVALID;
input   res_9_V_V_TREADY;
output  [31:0] res_10_V_V_TDATA;
output   res_10_V_V_TVALID;
input   res_10_V_V_TREADY;
output  [31:0] res_11_V_V_TDATA;
output   res_11_V_V_TVALID;
input   res_11_V_V_TREADY;
output  [31:0] res_12_V_V_TDATA;
output   res_12_V_V_TVALID;
input   res_12_V_V_TREADY;
output  [31:0] res_13_V_V_TDATA;
output   res_13_V_V_TVALID;
input   res_13_V_V_TREADY;
output  [31:0] res_14_V_V_TDATA;
output   res_14_V_V_TVALID;
input   res_14_V_V_TREADY;
output  [31:0] res_15_V_V_TDATA;
output   res_15_V_V_TVALID;
input   res_15_V_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data1_0_V_V_TREADY;
reg data1_1_V_V_TREADY;
reg data1_2_V_V_TREADY;
reg data1_3_V_V_TREADY;
reg data1_4_V_V_TREADY;
reg data1_5_V_V_TREADY;
reg data1_6_V_V_TREADY;
reg data1_7_V_V_TREADY;
reg data1_8_V_V_TREADY;
reg data1_9_V_V_TREADY;
reg data1_10_V_V_TREADY;
reg data1_11_V_V_TREADY;
reg data1_12_V_V_TREADY;
reg data1_13_V_V_TREADY;
reg data1_14_V_V_TREADY;
reg data1_15_V_V_TREADY;
reg data2_V_V_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    data1_0_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln147_fu_1174_p2;
reg    data1_1_V_V_TDATA_blk_n;
reg    data1_2_V_V_TDATA_blk_n;
reg    data1_3_V_V_TDATA_blk_n;
reg    data1_4_V_V_TDATA_blk_n;
reg    data1_5_V_V_TDATA_blk_n;
reg    data1_6_V_V_TDATA_blk_n;
reg    data1_7_V_V_TDATA_blk_n;
reg    data1_8_V_V_TDATA_blk_n;
reg    data1_9_V_V_TDATA_blk_n;
reg    data1_10_V_V_TDATA_blk_n;
reg    data1_11_V_V_TDATA_blk_n;
reg    data1_12_V_V_TDATA_blk_n;
reg    data1_13_V_V_TDATA_blk_n;
reg    data1_14_V_V_TDATA_blk_n;
reg    data1_15_V_V_TDATA_blk_n;
reg    data2_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln142_fu_550_p2;
reg    res_0_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] icmp_ln147_reg_1933;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln147_reg_1933_pp1_iter1_reg;
reg    res_1_V_V_TDATA_blk_n;
reg    res_2_V_V_TDATA_blk_n;
reg    res_3_V_V_TDATA_blk_n;
reg    res_4_V_V_TDATA_blk_n;
reg    res_5_V_V_TDATA_blk_n;
reg    res_6_V_V_TDATA_blk_n;
reg    res_7_V_V_TDATA_blk_n;
reg    res_8_V_V_TDATA_blk_n;
reg    res_9_V_V_TDATA_blk_n;
reg    res_10_V_V_TDATA_blk_n;
reg    res_11_V_V_TDATA_blk_n;
reg    res_12_V_V_TDATA_blk_n;
reg    res_13_V_V_TDATA_blk_n;
reg    res_14_V_V_TDATA_blk_n;
reg    res_15_V_V_TDATA_blk_n;
reg   [11:0] i1_0_i_reg_539;
wire   [5:0] i_1_fu_556_p2;
reg    ap_block_state2;
wire  signed [47:0] sext_ln727_fu_832_p1;
reg  signed [47:0] sext_ln727_reg_1773;
wire    ap_CS_fsm_state3;
wire   [47:0] shl_ln_fu_836_p3;
reg   [47:0] shl_ln_reg_1778;
wire  signed [47:0] sext_ln727_1_fu_854_p1;
reg  signed [47:0] sext_ln727_1_reg_1783;
wire   [47:0] shl_ln728_1_fu_858_p3;
reg   [47:0] shl_ln728_1_reg_1788;
wire  signed [47:0] sext_ln727_2_fu_876_p1;
reg  signed [47:0] sext_ln727_2_reg_1793;
wire   [47:0] shl_ln728_2_fu_880_p3;
reg   [47:0] shl_ln728_2_reg_1798;
wire  signed [47:0] sext_ln727_3_fu_898_p1;
reg  signed [47:0] sext_ln727_3_reg_1803;
wire   [47:0] shl_ln728_3_fu_902_p3;
reg   [47:0] shl_ln728_3_reg_1808;
wire  signed [47:0] sext_ln727_4_fu_920_p1;
reg  signed [47:0] sext_ln727_4_reg_1813;
wire   [47:0] shl_ln728_4_fu_924_p3;
reg   [47:0] shl_ln728_4_reg_1818;
wire  signed [47:0] sext_ln727_5_fu_942_p1;
reg  signed [47:0] sext_ln727_5_reg_1823;
wire   [47:0] shl_ln728_5_fu_946_p3;
reg   [47:0] shl_ln728_5_reg_1828;
wire  signed [47:0] sext_ln727_6_fu_964_p1;
reg  signed [47:0] sext_ln727_6_reg_1833;
wire   [47:0] shl_ln728_6_fu_968_p3;
reg   [47:0] shl_ln728_6_reg_1838;
wire  signed [47:0] sext_ln727_7_fu_986_p1;
reg  signed [47:0] sext_ln727_7_reg_1843;
wire   [47:0] shl_ln728_7_fu_990_p3;
reg   [47:0] shl_ln728_7_reg_1848;
wire  signed [47:0] sext_ln727_8_fu_1008_p1;
reg  signed [47:0] sext_ln727_8_reg_1853;
wire   [47:0] shl_ln728_8_fu_1012_p3;
reg   [47:0] shl_ln728_8_reg_1858;
wire  signed [47:0] sext_ln727_9_fu_1030_p1;
reg  signed [47:0] sext_ln727_9_reg_1863;
wire   [47:0] shl_ln728_9_fu_1034_p3;
reg   [47:0] shl_ln728_9_reg_1868;
wire  signed [47:0] sext_ln727_10_fu_1052_p1;
reg  signed [47:0] sext_ln727_10_reg_1873;
wire   [47:0] shl_ln728_s_fu_1056_p3;
reg   [47:0] shl_ln728_s_reg_1878;
wire  signed [47:0] sext_ln727_11_fu_1074_p1;
reg  signed [47:0] sext_ln727_11_reg_1883;
wire   [47:0] shl_ln728_10_fu_1078_p3;
reg   [47:0] shl_ln728_10_reg_1888;
wire  signed [47:0] sext_ln727_12_fu_1096_p1;
reg  signed [47:0] sext_ln727_12_reg_1893;
wire   [47:0] shl_ln728_11_fu_1100_p3;
reg   [47:0] shl_ln728_11_reg_1898;
wire  signed [47:0] sext_ln727_13_fu_1118_p1;
reg  signed [47:0] sext_ln727_13_reg_1903;
wire   [47:0] shl_ln728_12_fu_1122_p3;
reg   [47:0] shl_ln728_12_reg_1908;
wire  signed [47:0] sext_ln727_14_fu_1140_p1;
reg  signed [47:0] sext_ln727_14_reg_1913;
wire   [47:0] shl_ln728_13_fu_1144_p3;
reg   [47:0] shl_ln728_13_reg_1918;
wire  signed [47:0] sext_ln727_15_fu_1162_p1;
reg  signed [47:0] sext_ln727_15_reg_1923;
wire   [47:0] shl_ln728_14_fu_1166_p3;
reg   [47:0] shl_ln728_14_reg_1928;
reg    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
reg    ap_block_state5_io;
wire    ap_block_state6_pp1_stage0_iter2;
reg    ap_block_state6_io;
reg    ap_block_pp1_stage0_11001;
wire   [11:0] i_fu_1180_p2;
reg   [31:0] tmp_V_3_reg_1942;
reg   [31:0] tmp_V_4_reg_1947;
reg   [31:0] tmp_V_5_reg_1952;
reg   [31:0] tmp_V_6_reg_1957;
reg   [31:0] tmp_V_7_reg_1962;
reg   [31:0] tmp_V_8_reg_1967;
reg   [31:0] tmp_V_9_reg_1972;
reg   [31:0] tmp_V_57_reg_1977;
reg   [31:0] tmp_V_59_reg_1982;
reg   [31:0] tmp_V_61_reg_1987;
reg   [31:0] tmp_V_63_reg_1992;
reg   [31:0] tmp_V_65_reg_1997;
reg   [31:0] tmp_V_67_reg_2002;
reg   [31:0] tmp_V_69_reg_2007;
reg   [31:0] tmp_V_71_reg_2012;
reg   [31:0] tmp_V_73_reg_2017;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg   [5:0] i_0_i_reg_528;
reg    ap_block_state1;
reg   [31:0] tmp_V_fu_186;
wire   [4:0] trunc_ln203_fu_562_p1;
reg   [31:0] tmp_V_1_fu_190;
reg   [31:0] tmp_V_2_fu_194;
reg   [31:0] tmp_V_19_fu_198;
reg   [31:0] tmp_V_20_fu_202;
reg   [31:0] tmp_V_21_fu_206;
reg   [31:0] tmp_V_22_fu_210;
reg   [31:0] tmp_V_23_fu_214;
reg   [31:0] tmp_V_24_fu_218;
reg   [31:0] tmp_V_25_fu_222;
reg   [31:0] tmp_V_26_fu_226;
reg   [31:0] tmp_V_27_fu_230;
reg   [31:0] tmp_V_28_fu_234;
reg   [31:0] tmp_V_29_fu_238;
reg   [31:0] tmp_V_30_fu_242;
reg   [31:0] tmp_V_31_fu_246;
reg   [31:0] tmp_V_32_fu_250;
reg   [31:0] tmp_V_33_fu_254;
reg   [31:0] tmp_V_34_fu_258;
reg   [31:0] tmp_V_35_fu_262;
reg   [31:0] tmp_V_36_fu_266;
reg   [31:0] tmp_V_37_fu_270;
reg   [31:0] tmp_V_38_fu_274;
reg   [31:0] tmp_V_39_fu_278;
reg   [31:0] tmp_V_40_fu_282;
reg   [31:0] tmp_V_41_fu_286;
reg   [31:0] tmp_V_42_fu_290;
reg   [31:0] tmp_V_43_fu_294;
reg   [31:0] tmp_V_44_fu_298;
reg   [31:0] tmp_V_45_fu_302;
reg   [31:0] tmp_V_46_fu_306;
reg   [31:0] tmp_V_47_fu_310;
reg    ap_block_pp1_stage0_01001;
wire  signed [32:0] sext_ln1192_fu_822_p1;
wire   [32:0] add_ln1192_fu_826_p2;
wire  signed [32:0] sext_ln1192_1_fu_844_p1;
wire   [32:0] add_ln1192_2_fu_848_p2;
wire  signed [32:0] sext_ln1192_2_fu_866_p1;
wire   [32:0] add_ln1192_4_fu_870_p2;
wire  signed [32:0] sext_ln1192_3_fu_888_p1;
wire   [32:0] add_ln1192_6_fu_892_p2;
wire  signed [32:0] sext_ln1192_4_fu_910_p1;
wire   [32:0] add_ln1192_8_fu_914_p2;
wire  signed [32:0] sext_ln1192_5_fu_932_p1;
wire   [32:0] add_ln1192_10_fu_936_p2;
wire  signed [32:0] sext_ln1192_6_fu_954_p1;
wire   [32:0] add_ln1192_12_fu_958_p2;
wire  signed [32:0] sext_ln1192_7_fu_976_p1;
wire   [32:0] add_ln1192_14_fu_980_p2;
wire  signed [32:0] sext_ln1192_8_fu_998_p1;
wire   [32:0] add_ln1192_16_fu_1002_p2;
wire  signed [32:0] sext_ln1192_9_fu_1020_p1;
wire   [32:0] add_ln1192_18_fu_1024_p2;
wire  signed [32:0] sext_ln1192_10_fu_1042_p1;
wire   [32:0] add_ln1192_20_fu_1046_p2;
wire  signed [32:0] sext_ln1192_11_fu_1064_p1;
wire   [32:0] add_ln1192_22_fu_1068_p2;
wire  signed [32:0] sext_ln1192_12_fu_1086_p1;
wire   [32:0] add_ln1192_24_fu_1090_p2;
wire  signed [32:0] sext_ln1192_13_fu_1108_p1;
wire   [32:0] add_ln1192_26_fu_1112_p2;
wire  signed [32:0] sext_ln1192_14_fu_1130_p1;
wire   [32:0] add_ln1192_28_fu_1134_p2;
wire  signed [32:0] sext_ln1192_15_fu_1152_p1;
wire   [32:0] add_ln1192_30_fu_1156_p2;
wire  signed [32:0] mul_ln727_fu_1190_p0;
wire  signed [31:0] mul_ln727_fu_1190_p1;
wire   [47:0] mul_ln727_fu_1190_p2;
wire   [47:0] add_ln1192_1_fu_1195_p2;
wire  signed [32:0] mul_ln727_1_fu_1214_p0;
wire  signed [31:0] mul_ln727_1_fu_1214_p1;
wire   [47:0] mul_ln727_1_fu_1214_p2;
wire   [47:0] add_ln1192_3_fu_1219_p2;
wire  signed [32:0] mul_ln727_2_fu_1238_p0;
wire  signed [31:0] mul_ln727_2_fu_1238_p1;
wire   [47:0] mul_ln727_2_fu_1238_p2;
wire   [47:0] add_ln1192_5_fu_1243_p2;
wire  signed [32:0] mul_ln727_3_fu_1262_p0;
wire  signed [31:0] mul_ln727_3_fu_1262_p1;
wire   [47:0] mul_ln727_3_fu_1262_p2;
wire   [47:0] add_ln1192_7_fu_1267_p2;
wire  signed [32:0] mul_ln727_4_fu_1286_p0;
wire  signed [31:0] mul_ln727_4_fu_1286_p1;
wire   [47:0] mul_ln727_4_fu_1286_p2;
wire   [47:0] add_ln1192_9_fu_1291_p2;
wire  signed [32:0] mul_ln727_5_fu_1310_p0;
wire  signed [31:0] mul_ln727_5_fu_1310_p1;
wire   [47:0] mul_ln727_5_fu_1310_p2;
wire   [47:0] add_ln1192_11_fu_1315_p2;
wire  signed [32:0] mul_ln727_6_fu_1334_p0;
wire  signed [31:0] mul_ln727_6_fu_1334_p1;
wire   [47:0] mul_ln727_6_fu_1334_p2;
wire   [47:0] add_ln1192_13_fu_1339_p2;
wire  signed [32:0] mul_ln727_7_fu_1358_p0;
wire  signed [31:0] mul_ln727_7_fu_1358_p1;
wire   [47:0] mul_ln727_7_fu_1358_p2;
wire   [47:0] add_ln1192_15_fu_1363_p2;
wire  signed [32:0] mul_ln727_8_fu_1382_p0;
wire  signed [31:0] mul_ln727_8_fu_1382_p1;
wire   [47:0] mul_ln727_8_fu_1382_p2;
wire   [47:0] add_ln1192_17_fu_1387_p2;
wire  signed [32:0] mul_ln727_9_fu_1406_p0;
wire  signed [31:0] mul_ln727_9_fu_1406_p1;
wire   [47:0] mul_ln727_9_fu_1406_p2;
wire   [47:0] add_ln1192_19_fu_1411_p2;
wire  signed [32:0] mul_ln727_10_fu_1430_p0;
wire  signed [31:0] mul_ln727_10_fu_1430_p1;
wire   [47:0] mul_ln727_10_fu_1430_p2;
wire   [47:0] add_ln1192_21_fu_1435_p2;
wire  signed [32:0] mul_ln727_11_fu_1454_p0;
wire  signed [31:0] mul_ln727_11_fu_1454_p1;
wire   [47:0] mul_ln727_11_fu_1454_p2;
wire   [47:0] add_ln1192_23_fu_1459_p2;
wire  signed [32:0] mul_ln727_12_fu_1478_p0;
wire  signed [31:0] mul_ln727_12_fu_1478_p1;
wire   [47:0] mul_ln727_12_fu_1478_p2;
wire   [47:0] add_ln1192_25_fu_1483_p2;
wire  signed [32:0] mul_ln727_13_fu_1502_p0;
wire  signed [31:0] mul_ln727_13_fu_1502_p1;
wire   [47:0] mul_ln727_13_fu_1502_p2;
wire   [47:0] add_ln1192_27_fu_1507_p2;
wire  signed [32:0] mul_ln727_14_fu_1526_p0;
wire  signed [31:0] mul_ln727_14_fu_1526_p1;
wire   [47:0] mul_ln727_14_fu_1526_p2;
wire   [47:0] add_ln1192_29_fu_1531_p2;
wire  signed [32:0] mul_ln727_15_fu_1550_p0;
wire  signed [31:0] mul_ln727_15_fu_1550_p1;
wire   [47:0] mul_ln727_15_fu_1550_p2;
wire   [47:0] add_ln1192_31_fu_1555_p2;
wire    ap_CS_fsm_state7;
wire    regslice_both_res_0_V_V_U_apdone_blk;
wire    regslice_both_res_1_V_V_U_apdone_blk;
wire    regslice_both_res_2_V_V_U_apdone_blk;
wire    regslice_both_res_3_V_V_U_apdone_blk;
wire    regslice_both_res_4_V_V_U_apdone_blk;
wire    regslice_both_res_5_V_V_U_apdone_blk;
wire    regslice_both_res_6_V_V_U_apdone_blk;
wire    regslice_both_res_7_V_V_U_apdone_blk;
wire    regslice_both_res_8_V_V_U_apdone_blk;
wire    regslice_both_res_9_V_V_U_apdone_blk;
wire    regslice_both_res_10_V_V_U_apdone_blk;
wire    regslice_both_res_11_V_V_U_apdone_blk;
wire    regslice_both_res_12_V_V_U_apdone_blk;
wire    regslice_both_res_13_V_V_U_apdone_blk;
wire    regslice_both_res_14_V_V_U_apdone_blk;
wire    regslice_both_res_15_V_V_U_apdone_blk;
reg    ap_block_state7;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_data1_0_V_V_U_apdone_blk;
wire   [31:0] data1_0_V_V_TDATA_int;
wire    data1_0_V_V_TVALID_int;
reg    data1_0_V_V_TREADY_int;
wire    regslice_both_data1_0_V_V_U_ack_in;
wire    regslice_both_data1_1_V_V_U_apdone_blk;
wire   [31:0] data1_1_V_V_TDATA_int;
wire    data1_1_V_V_TVALID_int;
reg    data1_1_V_V_TREADY_int;
wire    regslice_both_data1_1_V_V_U_ack_in;
wire    regslice_both_data1_2_V_V_U_apdone_blk;
wire   [31:0] data1_2_V_V_TDATA_int;
wire    data1_2_V_V_TVALID_int;
reg    data1_2_V_V_TREADY_int;
wire    regslice_both_data1_2_V_V_U_ack_in;
wire    regslice_both_data1_3_V_V_U_apdone_blk;
wire   [31:0] data1_3_V_V_TDATA_int;
wire    data1_3_V_V_TVALID_int;
reg    data1_3_V_V_TREADY_int;
wire    regslice_both_data1_3_V_V_U_ack_in;
wire    regslice_both_data1_4_V_V_U_apdone_blk;
wire   [31:0] data1_4_V_V_TDATA_int;
wire    data1_4_V_V_TVALID_int;
reg    data1_4_V_V_TREADY_int;
wire    regslice_both_data1_4_V_V_U_ack_in;
wire    regslice_both_data1_5_V_V_U_apdone_blk;
wire   [31:0] data1_5_V_V_TDATA_int;
wire    data1_5_V_V_TVALID_int;
reg    data1_5_V_V_TREADY_int;
wire    regslice_both_data1_5_V_V_U_ack_in;
wire    regslice_both_data1_6_V_V_U_apdone_blk;
wire   [31:0] data1_6_V_V_TDATA_int;
wire    data1_6_V_V_TVALID_int;
reg    data1_6_V_V_TREADY_int;
wire    regslice_both_data1_6_V_V_U_ack_in;
wire    regslice_both_data1_7_V_V_U_apdone_blk;
wire   [31:0] data1_7_V_V_TDATA_int;
wire    data1_7_V_V_TVALID_int;
reg    data1_7_V_V_TREADY_int;
wire    regslice_both_data1_7_V_V_U_ack_in;
wire    regslice_both_data1_8_V_V_U_apdone_blk;
wire   [31:0] data1_8_V_V_TDATA_int;
wire    data1_8_V_V_TVALID_int;
reg    data1_8_V_V_TREADY_int;
wire    regslice_both_data1_8_V_V_U_ack_in;
wire    regslice_both_data1_9_V_V_U_apdone_blk;
wire   [31:0] data1_9_V_V_TDATA_int;
wire    data1_9_V_V_TVALID_int;
reg    data1_9_V_V_TREADY_int;
wire    regslice_both_data1_9_V_V_U_ack_in;
wire    regslice_both_data1_10_V_V_U_apdone_blk;
wire   [31:0] data1_10_V_V_TDATA_int;
wire    data1_10_V_V_TVALID_int;
reg    data1_10_V_V_TREADY_int;
wire    regslice_both_data1_10_V_V_U_ack_in;
wire    regslice_both_data1_11_V_V_U_apdone_blk;
wire   [31:0] data1_11_V_V_TDATA_int;
wire    data1_11_V_V_TVALID_int;
reg    data1_11_V_V_TREADY_int;
wire    regslice_both_data1_11_V_V_U_ack_in;
wire    regslice_both_data1_12_V_V_U_apdone_blk;
wire   [31:0] data1_12_V_V_TDATA_int;
wire    data1_12_V_V_TVALID_int;
reg    data1_12_V_V_TREADY_int;
wire    regslice_both_data1_12_V_V_U_ack_in;
wire    regslice_both_data1_13_V_V_U_apdone_blk;
wire   [31:0] data1_13_V_V_TDATA_int;
wire    data1_13_V_V_TVALID_int;
reg    data1_13_V_V_TREADY_int;
wire    regslice_both_data1_13_V_V_U_ack_in;
wire    regslice_both_data1_14_V_V_U_apdone_blk;
wire   [31:0] data1_14_V_V_TDATA_int;
wire    data1_14_V_V_TVALID_int;
reg    data1_14_V_V_TREADY_int;
wire    regslice_both_data1_14_V_V_U_ack_in;
wire    regslice_both_data1_15_V_V_U_apdone_blk;
wire   [31:0] data1_15_V_V_TDATA_int;
wire    data1_15_V_V_TVALID_int;
reg    data1_15_V_V_TREADY_int;
wire    regslice_both_data1_15_V_V_U_ack_in;
wire    regslice_both_data2_V_V_U_apdone_blk;
wire   [31:0] data2_V_V_TDATA_int;
wire    data2_V_V_TVALID_int;
reg    data2_V_V_TREADY_int;
wire    regslice_both_data2_V_V_U_ack_in;
reg    res_0_V_V_TVALID_int;
wire    res_0_V_V_TREADY_int;
wire    regslice_both_res_0_V_V_U_vld_out;
reg    res_1_V_V_TVALID_int;
wire    res_1_V_V_TREADY_int;
wire    regslice_both_res_1_V_V_U_vld_out;
reg    res_2_V_V_TVALID_int;
wire    res_2_V_V_TREADY_int;
wire    regslice_both_res_2_V_V_U_vld_out;
reg    res_3_V_V_TVALID_int;
wire    res_3_V_V_TREADY_int;
wire    regslice_both_res_3_V_V_U_vld_out;
reg    res_4_V_V_TVALID_int;
wire    res_4_V_V_TREADY_int;
wire    regslice_both_res_4_V_V_U_vld_out;
reg    res_5_V_V_TVALID_int;
wire    res_5_V_V_TREADY_int;
wire    regslice_both_res_5_V_V_U_vld_out;
reg    res_6_V_V_TVALID_int;
wire    res_6_V_V_TREADY_int;
wire    regslice_both_res_6_V_V_U_vld_out;
reg    res_7_V_V_TVALID_int;
wire    res_7_V_V_TREADY_int;
wire    regslice_both_res_7_V_V_U_vld_out;
reg    res_8_V_V_TVALID_int;
wire    res_8_V_V_TREADY_int;
wire    regslice_both_res_8_V_V_U_vld_out;
reg    res_9_V_V_TVALID_int;
wire    res_9_V_V_TREADY_int;
wire    regslice_both_res_9_V_V_U_vld_out;
reg    res_10_V_V_TVALID_int;
wire    res_10_V_V_TREADY_int;
wire    regslice_both_res_10_V_V_U_vld_out;
reg    res_11_V_V_TVALID_int;
wire    res_11_V_V_TREADY_int;
wire    regslice_both_res_11_V_V_U_vld_out;
reg    res_12_V_V_TVALID_int;
wire    res_12_V_V_TREADY_int;
wire    regslice_both_res_12_V_V_U_vld_out;
reg    res_13_V_V_TVALID_int;
wire    res_13_V_V_TREADY_int;
wire    regslice_both_res_13_V_V_U_vld_out;
reg    res_14_V_V_TVALID_int;
wire    res_14_V_V_TREADY_int;
wire    regslice_both_res_14_V_V_U_vld_out;
reg    res_15_V_V_TVALID_int;
wire    res_15_V_V_TREADY_int;
wire    regslice_both_res_15_V_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_0_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_0_V_V_TDATA),
    .vld_in(data1_0_V_V_TVALID),
    .ack_in(regslice_both_data1_0_V_V_U_ack_in),
    .data_out(data1_0_V_V_TDATA_int),
    .vld_out(data1_0_V_V_TVALID_int),
    .ack_out(data1_0_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_0_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_1_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_1_V_V_TDATA),
    .vld_in(data1_1_V_V_TVALID),
    .ack_in(regslice_both_data1_1_V_V_U_ack_in),
    .data_out(data1_1_V_V_TDATA_int),
    .vld_out(data1_1_V_V_TVALID_int),
    .ack_out(data1_1_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_1_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_2_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_2_V_V_TDATA),
    .vld_in(data1_2_V_V_TVALID),
    .ack_in(regslice_both_data1_2_V_V_U_ack_in),
    .data_out(data1_2_V_V_TDATA_int),
    .vld_out(data1_2_V_V_TVALID_int),
    .ack_out(data1_2_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_2_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_3_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_3_V_V_TDATA),
    .vld_in(data1_3_V_V_TVALID),
    .ack_in(regslice_both_data1_3_V_V_U_ack_in),
    .data_out(data1_3_V_V_TDATA_int),
    .vld_out(data1_3_V_V_TVALID_int),
    .ack_out(data1_3_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_3_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_4_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_4_V_V_TDATA),
    .vld_in(data1_4_V_V_TVALID),
    .ack_in(regslice_both_data1_4_V_V_U_ack_in),
    .data_out(data1_4_V_V_TDATA_int),
    .vld_out(data1_4_V_V_TVALID_int),
    .ack_out(data1_4_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_4_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_5_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_5_V_V_TDATA),
    .vld_in(data1_5_V_V_TVALID),
    .ack_in(regslice_both_data1_5_V_V_U_ack_in),
    .data_out(data1_5_V_V_TDATA_int),
    .vld_out(data1_5_V_V_TVALID_int),
    .ack_out(data1_5_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_5_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_6_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_6_V_V_TDATA),
    .vld_in(data1_6_V_V_TVALID),
    .ack_in(regslice_both_data1_6_V_V_U_ack_in),
    .data_out(data1_6_V_V_TDATA_int),
    .vld_out(data1_6_V_V_TVALID_int),
    .ack_out(data1_6_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_6_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_7_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_7_V_V_TDATA),
    .vld_in(data1_7_V_V_TVALID),
    .ack_in(regslice_both_data1_7_V_V_U_ack_in),
    .data_out(data1_7_V_V_TDATA_int),
    .vld_out(data1_7_V_V_TVALID_int),
    .ack_out(data1_7_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_7_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_8_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_8_V_V_TDATA),
    .vld_in(data1_8_V_V_TVALID),
    .ack_in(regslice_both_data1_8_V_V_U_ack_in),
    .data_out(data1_8_V_V_TDATA_int),
    .vld_out(data1_8_V_V_TVALID_int),
    .ack_out(data1_8_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_8_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_9_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_9_V_V_TDATA),
    .vld_in(data1_9_V_V_TVALID),
    .ack_in(regslice_both_data1_9_V_V_U_ack_in),
    .data_out(data1_9_V_V_TDATA_int),
    .vld_out(data1_9_V_V_TVALID_int),
    .ack_out(data1_9_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_9_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_10_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_10_V_V_TDATA),
    .vld_in(data1_10_V_V_TVALID),
    .ack_in(regslice_both_data1_10_V_V_U_ack_in),
    .data_out(data1_10_V_V_TDATA_int),
    .vld_out(data1_10_V_V_TVALID_int),
    .ack_out(data1_10_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_10_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_11_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_11_V_V_TDATA),
    .vld_in(data1_11_V_V_TVALID),
    .ack_in(regslice_both_data1_11_V_V_U_ack_in),
    .data_out(data1_11_V_V_TDATA_int),
    .vld_out(data1_11_V_V_TVALID_int),
    .ack_out(data1_11_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_11_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_12_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_12_V_V_TDATA),
    .vld_in(data1_12_V_V_TVALID),
    .ack_in(regslice_both_data1_12_V_V_U_ack_in),
    .data_out(data1_12_V_V_TDATA_int),
    .vld_out(data1_12_V_V_TVALID_int),
    .ack_out(data1_12_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_12_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_13_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_13_V_V_TDATA),
    .vld_in(data1_13_V_V_TVALID),
    .ack_in(regslice_both_data1_13_V_V_U_ack_in),
    .data_out(data1_13_V_V_TDATA_int),
    .vld_out(data1_13_V_V_TVALID_int),
    .ack_out(data1_13_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_13_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_14_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_14_V_V_TDATA),
    .vld_in(data1_14_V_V_TVALID),
    .ack_in(regslice_both_data1_14_V_V_U_ack_in),
    .data_out(data1_14_V_V_TDATA_int),
    .vld_out(data1_14_V_V_TVALID_int),
    .ack_out(data1_14_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_14_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data1_15_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data1_15_V_V_TDATA),
    .vld_in(data1_15_V_V_TVALID),
    .ack_in(regslice_both_data1_15_V_V_U_ack_in),
    .data_out(data1_15_V_V_TDATA_int),
    .vld_out(data1_15_V_V_TVALID_int),
    .ack_out(data1_15_V_V_TREADY_int),
    .apdone_blk(regslice_both_data1_15_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_data2_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(data2_V_V_TDATA),
    .vld_in(data2_V_V_TVALID),
    .ack_in(regslice_both_data2_V_V_U_ack_in),
    .data_out(data2_V_V_TDATA_int),
    .vld_out(data2_V_V_TVALID_int),
    .ack_out(data2_V_V_TREADY_int),
    .apdone_blk(regslice_both_data2_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_0_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_3_reg_1942),
    .vld_in(res_0_V_V_TVALID_int),
    .ack_in(res_0_V_V_TREADY_int),
    .data_out(res_0_V_V_TDATA),
    .vld_out(regslice_both_res_0_V_V_U_vld_out),
    .ack_out(res_0_V_V_TREADY),
    .apdone_blk(regslice_both_res_0_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_1_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_4_reg_1947),
    .vld_in(res_1_V_V_TVALID_int),
    .ack_in(res_1_V_V_TREADY_int),
    .data_out(res_1_V_V_TDATA),
    .vld_out(regslice_both_res_1_V_V_U_vld_out),
    .ack_out(res_1_V_V_TREADY),
    .apdone_blk(regslice_both_res_1_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_2_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_5_reg_1952),
    .vld_in(res_2_V_V_TVALID_int),
    .ack_in(res_2_V_V_TREADY_int),
    .data_out(res_2_V_V_TDATA),
    .vld_out(regslice_both_res_2_V_V_U_vld_out),
    .ack_out(res_2_V_V_TREADY),
    .apdone_blk(regslice_both_res_2_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_3_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_6_reg_1957),
    .vld_in(res_3_V_V_TVALID_int),
    .ack_in(res_3_V_V_TREADY_int),
    .data_out(res_3_V_V_TDATA),
    .vld_out(regslice_both_res_3_V_V_U_vld_out),
    .ack_out(res_3_V_V_TREADY),
    .apdone_blk(regslice_both_res_3_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_4_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_7_reg_1962),
    .vld_in(res_4_V_V_TVALID_int),
    .ack_in(res_4_V_V_TREADY_int),
    .data_out(res_4_V_V_TDATA),
    .vld_out(regslice_both_res_4_V_V_U_vld_out),
    .ack_out(res_4_V_V_TREADY),
    .apdone_blk(regslice_both_res_4_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_5_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_8_reg_1967),
    .vld_in(res_5_V_V_TVALID_int),
    .ack_in(res_5_V_V_TREADY_int),
    .data_out(res_5_V_V_TDATA),
    .vld_out(regslice_both_res_5_V_V_U_vld_out),
    .ack_out(res_5_V_V_TREADY),
    .apdone_blk(regslice_both_res_5_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_6_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_9_reg_1972),
    .vld_in(res_6_V_V_TVALID_int),
    .ack_in(res_6_V_V_TREADY_int),
    .data_out(res_6_V_V_TDATA),
    .vld_out(regslice_both_res_6_V_V_U_vld_out),
    .ack_out(res_6_V_V_TREADY),
    .apdone_blk(regslice_both_res_6_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_7_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_57_reg_1977),
    .vld_in(res_7_V_V_TVALID_int),
    .ack_in(res_7_V_V_TREADY_int),
    .data_out(res_7_V_V_TDATA),
    .vld_out(regslice_both_res_7_V_V_U_vld_out),
    .ack_out(res_7_V_V_TREADY),
    .apdone_blk(regslice_both_res_7_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_8_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_59_reg_1982),
    .vld_in(res_8_V_V_TVALID_int),
    .ack_in(res_8_V_V_TREADY_int),
    .data_out(res_8_V_V_TDATA),
    .vld_out(regslice_both_res_8_V_V_U_vld_out),
    .ack_out(res_8_V_V_TREADY),
    .apdone_blk(regslice_both_res_8_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_9_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_61_reg_1987),
    .vld_in(res_9_V_V_TVALID_int),
    .ack_in(res_9_V_V_TREADY_int),
    .data_out(res_9_V_V_TDATA),
    .vld_out(regslice_both_res_9_V_V_U_vld_out),
    .ack_out(res_9_V_V_TREADY),
    .apdone_blk(regslice_both_res_9_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_10_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_63_reg_1992),
    .vld_in(res_10_V_V_TVALID_int),
    .ack_in(res_10_V_V_TREADY_int),
    .data_out(res_10_V_V_TDATA),
    .vld_out(regslice_both_res_10_V_V_U_vld_out),
    .ack_out(res_10_V_V_TREADY),
    .apdone_blk(regslice_both_res_10_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_11_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_65_reg_1997),
    .vld_in(res_11_V_V_TVALID_int),
    .ack_in(res_11_V_V_TREADY_int),
    .data_out(res_11_V_V_TDATA),
    .vld_out(regslice_both_res_11_V_V_U_vld_out),
    .ack_out(res_11_V_V_TREADY),
    .apdone_blk(regslice_both_res_11_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_12_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_67_reg_2002),
    .vld_in(res_12_V_V_TVALID_int),
    .ack_in(res_12_V_V_TREADY_int),
    .data_out(res_12_V_V_TDATA),
    .vld_out(regslice_both_res_12_V_V_U_vld_out),
    .ack_out(res_12_V_V_TREADY),
    .apdone_blk(regslice_both_res_12_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_13_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_69_reg_2007),
    .vld_in(res_13_V_V_TVALID_int),
    .ack_in(res_13_V_V_TREADY_int),
    .data_out(res_13_V_V_TDATA),
    .vld_out(regslice_both_res_13_V_V_U_vld_out),
    .ack_out(res_13_V_V_TREADY),
    .apdone_blk(regslice_both_res_13_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_14_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_71_reg_2012),
    .vld_in(res_14_V_V_TVALID_int),
    .ack_in(res_14_V_V_TREADY_int),
    .data_out(res_14_V_V_TDATA),
    .vld_out(regslice_both_res_14_V_V_U_vld_out),
    .ack_out(res_14_V_V_TREADY),
    .apdone_blk(regslice_both_res_14_V_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_res_15_V_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(tmp_V_73_reg_2017),
    .vld_in(res_15_V_V_TVALID_int),
    .ack_in(res_15_V_V_TREADY_int),
    .data_out(res_15_V_V_TDATA),
    .vld_out(regslice_both_res_15_V_V_U_vld_out),
    .ack_out(res_15_V_V_TREADY),
    .apdone_blk(regslice_both_res_15_V_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_res_15_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_14_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_13_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_12_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_11_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_10_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_9_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_8_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_7_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_6_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i1_0_i_reg_539 <= 12'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        i1_0_i_reg_539 <= i_fu_1180_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        i_0_i_reg_528 <= i_1_fu_556_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_528 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln147_reg_1933 <= icmp_ln147_fu_1174_p2;
        icmp_ln147_reg_1933_pp1_iter1_reg <= icmp_ln147_reg_1933;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln727_10_reg_1873 <= sext_ln727_10_fu_1052_p1;
        sext_ln727_11_reg_1883 <= sext_ln727_11_fu_1074_p1;
        sext_ln727_12_reg_1893 <= sext_ln727_12_fu_1096_p1;
        sext_ln727_13_reg_1903 <= sext_ln727_13_fu_1118_p1;
        sext_ln727_14_reg_1913 <= sext_ln727_14_fu_1140_p1;
        sext_ln727_15_reg_1923 <= sext_ln727_15_fu_1162_p1;
        sext_ln727_1_reg_1783 <= sext_ln727_1_fu_854_p1;
        sext_ln727_2_reg_1793 <= sext_ln727_2_fu_876_p1;
        sext_ln727_3_reg_1803 <= sext_ln727_3_fu_898_p1;
        sext_ln727_4_reg_1813 <= sext_ln727_4_fu_920_p1;
        sext_ln727_5_reg_1823 <= sext_ln727_5_fu_942_p1;
        sext_ln727_6_reg_1833 <= sext_ln727_6_fu_964_p1;
        sext_ln727_7_reg_1843 <= sext_ln727_7_fu_986_p1;
        sext_ln727_8_reg_1853 <= sext_ln727_8_fu_1008_p1;
        sext_ln727_9_reg_1863 <= sext_ln727_9_fu_1030_p1;
        sext_ln727_reg_1773 <= sext_ln727_fu_832_p1;
        shl_ln728_10_reg_1888[47 : 16] <= shl_ln728_10_fu_1078_p3[47 : 16];
        shl_ln728_11_reg_1898[47 : 16] <= shl_ln728_11_fu_1100_p3[47 : 16];
        shl_ln728_12_reg_1908[47 : 16] <= shl_ln728_12_fu_1122_p3[47 : 16];
        shl_ln728_13_reg_1918[47 : 16] <= shl_ln728_13_fu_1144_p3[47 : 16];
        shl_ln728_14_reg_1928[47 : 16] <= shl_ln728_14_fu_1166_p3[47 : 16];
        shl_ln728_1_reg_1788[47 : 16] <= shl_ln728_1_fu_858_p3[47 : 16];
        shl_ln728_2_reg_1798[47 : 16] <= shl_ln728_2_fu_880_p3[47 : 16];
        shl_ln728_3_reg_1808[47 : 16] <= shl_ln728_3_fu_902_p3[47 : 16];
        shl_ln728_4_reg_1818[47 : 16] <= shl_ln728_4_fu_924_p3[47 : 16];
        shl_ln728_5_reg_1828[47 : 16] <= shl_ln728_5_fu_946_p3[47 : 16];
        shl_ln728_6_reg_1838[47 : 16] <= shl_ln728_6_fu_968_p3[47 : 16];
        shl_ln728_7_reg_1848[47 : 16] <= shl_ln728_7_fu_990_p3[47 : 16];
        shl_ln728_8_reg_1858[47 : 16] <= shl_ln728_8_fu_1012_p3[47 : 16];
        shl_ln728_9_reg_1868[47 : 16] <= shl_ln728_9_fu_1034_p3[47 : 16];
        shl_ln728_s_reg_1878[47 : 16] <= shl_ln728_s_fu_1056_p3[47 : 16];
        shl_ln_reg_1778[47 : 16] <= shl_ln_fu_836_p3[47 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd3) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_19_fu_198 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_1_fu_190 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd4) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_20_fu_202 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd5) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_21_fu_206 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd6) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_22_fu_210 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd7) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_23_fu_214 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd8) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_24_fu_218 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd9) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_25_fu_222 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd10) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_26_fu_226 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd11) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_27_fu_230 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd12) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_28_fu_234 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd13) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_29_fu_238 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd2) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_2_fu_194 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd14) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_30_fu_242 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd15) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_31_fu_246 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd16) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_32_fu_250 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd17) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_33_fu_254 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd18) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_34_fu_258 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd19) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_35_fu_262 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd20) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_36_fu_266 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd21) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_37_fu_270 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd22) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_38_fu_274 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd23) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_39_fu_278 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        tmp_V_3_reg_1942 <= {{add_ln1192_1_fu_1195_p2[47:16]}};
        tmp_V_4_reg_1947 <= {{add_ln1192_3_fu_1219_p2[47:16]}};
        tmp_V_57_reg_1977 <= {{add_ln1192_15_fu_1363_p2[47:16]}};
        tmp_V_59_reg_1982 <= {{add_ln1192_17_fu_1387_p2[47:16]}};
        tmp_V_5_reg_1952 <= {{add_ln1192_5_fu_1243_p2[47:16]}};
        tmp_V_61_reg_1987 <= {{add_ln1192_19_fu_1411_p2[47:16]}};
        tmp_V_63_reg_1992 <= {{add_ln1192_21_fu_1435_p2[47:16]}};
        tmp_V_65_reg_1997 <= {{add_ln1192_23_fu_1459_p2[47:16]}};
        tmp_V_67_reg_2002 <= {{add_ln1192_25_fu_1483_p2[47:16]}};
        tmp_V_69_reg_2007 <= {{add_ln1192_27_fu_1507_p2[47:16]}};
        tmp_V_6_reg_1957 <= {{add_ln1192_7_fu_1267_p2[47:16]}};
        tmp_V_71_reg_2012 <= {{add_ln1192_29_fu_1531_p2[47:16]}};
        tmp_V_73_reg_2017 <= {{add_ln1192_31_fu_1555_p2[47:16]}};
        tmp_V_7_reg_1962 <= {{add_ln1192_9_fu_1291_p2[47:16]}};
        tmp_V_8_reg_1967 <= {{add_ln1192_11_fu_1315_p2[47:16]}};
        tmp_V_9_reg_1972 <= {{add_ln1192_13_fu_1339_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd24) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_40_fu_282 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd25) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_41_fu_286 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd26) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_42_fu_290 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd27) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_43_fu_294 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd28) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_44_fu_298 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd29) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_45_fu_302 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd30) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_46_fu_306 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd31) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_47_fu_310 <= data2_V_V_TDATA_int;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (trunc_ln203_fu_562_p1 == 5'd0) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        tmp_V_fu_186 <= data2_V_V_TDATA_int;
    end
end

always @ (*) begin
    if ((icmp_ln147_fu_1174_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_res_15_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_14_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_13_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_12_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_11_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_10_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_9_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_8_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_7_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_6_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_res_15_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_14_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_13_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_12_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_11_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_10_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_9_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_8_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_7_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_6_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_0_V_V_TDATA_blk_n = data1_0_V_V_TVALID_int;
    end else begin
        data1_0_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_0_V_V_TVALID == 1'b1) & (regslice_both_data1_0_V_V_U_ack_in == 1'b1))) begin
        data1_0_V_V_TREADY = 1'b1;
    end else begin
        data1_0_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_0_V_V_TREADY_int = 1'b1;
    end else begin
        data1_0_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_10_V_V_TDATA_blk_n = data1_10_V_V_TVALID_int;
    end else begin
        data1_10_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_10_V_V_TVALID == 1'b1) & (regslice_both_data1_10_V_V_U_ack_in == 1'b1))) begin
        data1_10_V_V_TREADY = 1'b1;
    end else begin
        data1_10_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_10_V_V_TREADY_int = 1'b1;
    end else begin
        data1_10_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_11_V_V_TDATA_blk_n = data1_11_V_V_TVALID_int;
    end else begin
        data1_11_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_11_V_V_TVALID == 1'b1) & (regslice_both_data1_11_V_V_U_ack_in == 1'b1))) begin
        data1_11_V_V_TREADY = 1'b1;
    end else begin
        data1_11_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_11_V_V_TREADY_int = 1'b1;
    end else begin
        data1_11_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_12_V_V_TDATA_blk_n = data1_12_V_V_TVALID_int;
    end else begin
        data1_12_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_12_V_V_TVALID == 1'b1) & (regslice_both_data1_12_V_V_U_ack_in == 1'b1))) begin
        data1_12_V_V_TREADY = 1'b1;
    end else begin
        data1_12_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_12_V_V_TREADY_int = 1'b1;
    end else begin
        data1_12_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_13_V_V_TDATA_blk_n = data1_13_V_V_TVALID_int;
    end else begin
        data1_13_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_13_V_V_TVALID == 1'b1) & (regslice_both_data1_13_V_V_U_ack_in == 1'b1))) begin
        data1_13_V_V_TREADY = 1'b1;
    end else begin
        data1_13_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_13_V_V_TREADY_int = 1'b1;
    end else begin
        data1_13_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_14_V_V_TDATA_blk_n = data1_14_V_V_TVALID_int;
    end else begin
        data1_14_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_14_V_V_TVALID == 1'b1) & (regslice_both_data1_14_V_V_U_ack_in == 1'b1))) begin
        data1_14_V_V_TREADY = 1'b1;
    end else begin
        data1_14_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_14_V_V_TREADY_int = 1'b1;
    end else begin
        data1_14_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_15_V_V_TDATA_blk_n = data1_15_V_V_TVALID_int;
    end else begin
        data1_15_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_15_V_V_TVALID == 1'b1) & (regslice_both_data1_15_V_V_U_ack_in == 1'b1))) begin
        data1_15_V_V_TREADY = 1'b1;
    end else begin
        data1_15_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_15_V_V_TREADY_int = 1'b1;
    end else begin
        data1_15_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_1_V_V_TDATA_blk_n = data1_1_V_V_TVALID_int;
    end else begin
        data1_1_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_1_V_V_TVALID == 1'b1) & (regslice_both_data1_1_V_V_U_ack_in == 1'b1))) begin
        data1_1_V_V_TREADY = 1'b1;
    end else begin
        data1_1_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_1_V_V_TREADY_int = 1'b1;
    end else begin
        data1_1_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_2_V_V_TDATA_blk_n = data1_2_V_V_TVALID_int;
    end else begin
        data1_2_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_2_V_V_TVALID == 1'b1) & (regslice_both_data1_2_V_V_U_ack_in == 1'b1))) begin
        data1_2_V_V_TREADY = 1'b1;
    end else begin
        data1_2_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_2_V_V_TREADY_int = 1'b1;
    end else begin
        data1_2_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_3_V_V_TDATA_blk_n = data1_3_V_V_TVALID_int;
    end else begin
        data1_3_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_3_V_V_TVALID == 1'b1) & (regslice_both_data1_3_V_V_U_ack_in == 1'b1))) begin
        data1_3_V_V_TREADY = 1'b1;
    end else begin
        data1_3_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_3_V_V_TREADY_int = 1'b1;
    end else begin
        data1_3_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_4_V_V_TDATA_blk_n = data1_4_V_V_TVALID_int;
    end else begin
        data1_4_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_4_V_V_TVALID == 1'b1) & (regslice_both_data1_4_V_V_U_ack_in == 1'b1))) begin
        data1_4_V_V_TREADY = 1'b1;
    end else begin
        data1_4_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_4_V_V_TREADY_int = 1'b1;
    end else begin
        data1_4_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_5_V_V_TDATA_blk_n = data1_5_V_V_TVALID_int;
    end else begin
        data1_5_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_5_V_V_TVALID == 1'b1) & (regslice_both_data1_5_V_V_U_ack_in == 1'b1))) begin
        data1_5_V_V_TREADY = 1'b1;
    end else begin
        data1_5_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_5_V_V_TREADY_int = 1'b1;
    end else begin
        data1_5_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_6_V_V_TDATA_blk_n = data1_6_V_V_TVALID_int;
    end else begin
        data1_6_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_6_V_V_TVALID == 1'b1) & (regslice_both_data1_6_V_V_U_ack_in == 1'b1))) begin
        data1_6_V_V_TREADY = 1'b1;
    end else begin
        data1_6_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_6_V_V_TREADY_int = 1'b1;
    end else begin
        data1_6_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_7_V_V_TDATA_blk_n = data1_7_V_V_TVALID_int;
    end else begin
        data1_7_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_7_V_V_TVALID == 1'b1) & (regslice_both_data1_7_V_V_U_ack_in == 1'b1))) begin
        data1_7_V_V_TREADY = 1'b1;
    end else begin
        data1_7_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_7_V_V_TREADY_int = 1'b1;
    end else begin
        data1_7_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_8_V_V_TDATA_blk_n = data1_8_V_V_TVALID_int;
    end else begin
        data1_8_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_8_V_V_TVALID == 1'b1) & (regslice_both_data1_8_V_V_U_ack_in == 1'b1))) begin
        data1_8_V_V_TREADY = 1'b1;
    end else begin
        data1_8_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_8_V_V_TREADY_int = 1'b1;
    end else begin
        data1_8_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        data1_9_V_V_TDATA_blk_n = data1_9_V_V_TVALID_int;
    end else begin
        data1_9_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data1_9_V_V_TVALID == 1'b1) & (regslice_both_data1_9_V_V_U_ack_in == 1'b1))) begin
        data1_9_V_V_TREADY = 1'b1;
    end else begin
        data1_9_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_fu_1174_p2 == 1'd0))) begin
        data1_9_V_V_TREADY_int = 1'b1;
    end else begin
        data1_9_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        data2_V_V_TDATA_blk_n = data2_V_V_TVALID_int;
    end else begin
        data2_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data2_V_V_TVALID == 1'b1) & (regslice_both_data2_V_V_U_ack_in == 1'b1))) begin
        data2_V_V_TREADY = 1'b1;
    end else begin
        data2_V_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
        data2_V_V_TREADY_int = 1'b1;
    end else begin
        data2_V_V_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_0_V_V_TDATA_blk_n = res_0_V_V_TREADY_int;
    end else begin
        res_0_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_0_V_V_TVALID_int = 1'b1;
    end else begin
        res_0_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_10_V_V_TDATA_blk_n = res_10_V_V_TREADY_int;
    end else begin
        res_10_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_10_V_V_TVALID_int = 1'b1;
    end else begin
        res_10_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_11_V_V_TDATA_blk_n = res_11_V_V_TREADY_int;
    end else begin
        res_11_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_11_V_V_TVALID_int = 1'b1;
    end else begin
        res_11_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_12_V_V_TDATA_blk_n = res_12_V_V_TREADY_int;
    end else begin
        res_12_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_12_V_V_TVALID_int = 1'b1;
    end else begin
        res_12_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_13_V_V_TDATA_blk_n = res_13_V_V_TREADY_int;
    end else begin
        res_13_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_13_V_V_TVALID_int = 1'b1;
    end else begin
        res_13_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_14_V_V_TDATA_blk_n = res_14_V_V_TREADY_int;
    end else begin
        res_14_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_14_V_V_TVALID_int = 1'b1;
    end else begin
        res_14_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_15_V_V_TDATA_blk_n = res_15_V_V_TREADY_int;
    end else begin
        res_15_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_15_V_V_TVALID_int = 1'b1;
    end else begin
        res_15_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_1_V_V_TDATA_blk_n = res_1_V_V_TREADY_int;
    end else begin
        res_1_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_1_V_V_TVALID_int = 1'b1;
    end else begin
        res_1_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_2_V_V_TDATA_blk_n = res_2_V_V_TREADY_int;
    end else begin
        res_2_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_2_V_V_TVALID_int = 1'b1;
    end else begin
        res_2_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_3_V_V_TDATA_blk_n = res_3_V_V_TREADY_int;
    end else begin
        res_3_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_3_V_V_TVALID_int = 1'b1;
    end else begin
        res_3_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_4_V_V_TDATA_blk_n = res_4_V_V_TREADY_int;
    end else begin
        res_4_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_4_V_V_TVALID_int = 1'b1;
    end else begin
        res_4_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_5_V_V_TDATA_blk_n = res_5_V_V_TREADY_int;
    end else begin
        res_5_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_5_V_V_TVALID_int = 1'b1;
    end else begin
        res_5_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_6_V_V_TDATA_blk_n = res_6_V_V_TREADY_int;
    end else begin
        res_6_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_6_V_V_TVALID_int = 1'b1;
    end else begin
        res_6_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_7_V_V_TDATA_blk_n = res_7_V_V_TREADY_int;
    end else begin
        res_7_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_7_V_V_TVALID_int = 1'b1;
    end else begin
        res_7_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_8_V_V_TDATA_blk_n = res_8_V_V_TREADY_int;
    end else begin
        res_8_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_8_V_V_TVALID_int = 1'b1;
    end else begin
        res_8_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        res_9_V_V_TDATA_blk_n = res_9_V_V_TREADY_int;
    end else begin
        res_9_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln147_reg_1933 == 1'd0))) begin
        res_9_V_V_TVALID_int = 1'b1;
    end else begin
        res_9_V_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln142_fu_550_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((regslice_both_res_15_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_14_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_13_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_12_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_11_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_10_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_9_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_8_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_7_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_6_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_0_V_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_10_fu_936_p2 = ($signed(sext_ln1192_5_fu_932_p1) + $signed(33'd65536));

assign add_ln1192_11_fu_1315_p2 = (shl_ln728_5_reg_1828 + mul_ln727_5_fu_1310_p2);

assign add_ln1192_12_fu_958_p2 = ($signed(sext_ln1192_6_fu_954_p1) + $signed(33'd65536));

assign add_ln1192_13_fu_1339_p2 = (shl_ln728_6_reg_1838 + mul_ln727_6_fu_1334_p2);

assign add_ln1192_14_fu_980_p2 = ($signed(sext_ln1192_7_fu_976_p1) + $signed(33'd65536));

assign add_ln1192_15_fu_1363_p2 = (shl_ln728_7_reg_1848 + mul_ln727_7_fu_1358_p2);

assign add_ln1192_16_fu_1002_p2 = ($signed(sext_ln1192_8_fu_998_p1) + $signed(33'd65536));

assign add_ln1192_17_fu_1387_p2 = (shl_ln728_8_reg_1858 + mul_ln727_8_fu_1382_p2);

assign add_ln1192_18_fu_1024_p2 = ($signed(sext_ln1192_9_fu_1020_p1) + $signed(33'd65536));

assign add_ln1192_19_fu_1411_p2 = (shl_ln728_9_reg_1868 + mul_ln727_9_fu_1406_p2);

assign add_ln1192_1_fu_1195_p2 = (shl_ln_reg_1778 + mul_ln727_fu_1190_p2);

assign add_ln1192_20_fu_1046_p2 = ($signed(sext_ln1192_10_fu_1042_p1) + $signed(33'd65536));

assign add_ln1192_21_fu_1435_p2 = (shl_ln728_s_reg_1878 + mul_ln727_10_fu_1430_p2);

assign add_ln1192_22_fu_1068_p2 = ($signed(sext_ln1192_11_fu_1064_p1) + $signed(33'd65536));

assign add_ln1192_23_fu_1459_p2 = (shl_ln728_10_reg_1888 + mul_ln727_11_fu_1454_p2);

assign add_ln1192_24_fu_1090_p2 = ($signed(sext_ln1192_12_fu_1086_p1) + $signed(33'd65536));

assign add_ln1192_25_fu_1483_p2 = (shl_ln728_11_reg_1898 + mul_ln727_12_fu_1478_p2);

assign add_ln1192_26_fu_1112_p2 = ($signed(sext_ln1192_13_fu_1108_p1) + $signed(33'd65536));

assign add_ln1192_27_fu_1507_p2 = (shl_ln728_12_reg_1908 + mul_ln727_13_fu_1502_p2);

assign add_ln1192_28_fu_1134_p2 = ($signed(sext_ln1192_14_fu_1130_p1) + $signed(33'd65536));

assign add_ln1192_29_fu_1531_p2 = (shl_ln728_13_reg_1918 + mul_ln727_14_fu_1526_p2);

assign add_ln1192_2_fu_848_p2 = ($signed(sext_ln1192_1_fu_844_p1) + $signed(33'd65536));

assign add_ln1192_30_fu_1156_p2 = ($signed(sext_ln1192_15_fu_1152_p1) + $signed(33'd65536));

assign add_ln1192_31_fu_1555_p2 = (shl_ln728_14_reg_1928 + mul_ln727_15_fu_1550_p2);

assign add_ln1192_3_fu_1219_p2 = (shl_ln728_1_reg_1788 + mul_ln727_1_fu_1214_p2);

assign add_ln1192_4_fu_870_p2 = ($signed(sext_ln1192_2_fu_866_p1) + $signed(33'd65536));

assign add_ln1192_5_fu_1243_p2 = (shl_ln728_2_reg_1798 + mul_ln727_2_fu_1238_p2);

assign add_ln1192_6_fu_892_p2 = ($signed(sext_ln1192_3_fu_888_p1) + $signed(33'd65536));

assign add_ln1192_7_fu_1267_p2 = (shl_ln728_3_reg_1808 + mul_ln727_3_fu_1262_p2);

assign add_ln1192_8_fu_914_p2 = ($signed(sext_ln1192_4_fu_910_p1) + $signed(33'd65536));

assign add_ln1192_9_fu_1291_p2 = (shl_ln728_4_reg_1818 + mul_ln727_4_fu_1286_p2);

assign add_ln1192_fu_826_p2 = ($signed(sext_ln1192_fu_822_p1) + $signed(33'd65536));

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (((data1_15_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_14_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_13_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_12_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_11_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_10_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_9_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_8_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_7_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_6_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_5_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_4_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_3_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_2_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_1_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_0_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (((data1_15_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_14_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_13_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_12_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_11_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_10_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_9_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_8_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_7_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_6_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_5_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_4_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_3_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_2_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_1_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_0_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (((data1_15_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_14_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_13_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_12_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_11_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_10_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_9_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_8_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_7_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_6_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_5_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_4_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_3_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_2_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_1_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_0_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((data2_V_V_TVALID_int == 1'b0) & (icmp_ln142_fu_550_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state4_pp1_stage0_iter0 = (((data1_15_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_14_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_13_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_12_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_11_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_10_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_9_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_8_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_7_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_6_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_5_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_4_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_3_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_2_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_1_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)) | ((data1_0_V_V_TVALID_int == 1'b0) & (icmp_ln147_fu_1174_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state5_io = (((res_15_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_14_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_13_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_12_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_11_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_10_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_9_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_8_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_7_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_6_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_5_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_4_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_3_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_2_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_1_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)) | ((res_0_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933 == 1'd0)));
end

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = (((res_15_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_14_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_13_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_12_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_11_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_10_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_9_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_8_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_7_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_6_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_5_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_4_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_3_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_2_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_1_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)) | ((res_0_V_V_TREADY_int == 1'b0) & (icmp_ln147_reg_1933_pp1_iter1_reg == 1'd0)));
end

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7 = ((regslice_both_res_15_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_14_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_13_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_12_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_11_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_10_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_9_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_8_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_7_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_6_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_5_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_4_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_3_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_2_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_1_V_V_U_apdone_blk == 1'b1) | (regslice_both_res_0_V_V_U_apdone_blk == 1'b1));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign i_1_fu_556_p2 = (i_0_i_reg_528 + 6'd1);

assign i_fu_1180_p2 = (i1_0_i_reg_539 + 12'd1);

assign icmp_ln142_fu_550_p2 = ((i_0_i_reg_528 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln147_fu_1174_p2 = ((i1_0_i_reg_539 == 12'd3080) ? 1'b1 : 1'b0);

assign mul_ln727_10_fu_1430_p0 = sext_ln727_10_reg_1873;

assign mul_ln727_10_fu_1430_p1 = data1_10_V_V_TDATA_int;

assign mul_ln727_10_fu_1430_p2 = ($signed(mul_ln727_10_fu_1430_p0) * $signed(mul_ln727_10_fu_1430_p1));

assign mul_ln727_11_fu_1454_p0 = sext_ln727_11_reg_1883;

assign mul_ln727_11_fu_1454_p1 = data1_11_V_V_TDATA_int;

assign mul_ln727_11_fu_1454_p2 = ($signed(mul_ln727_11_fu_1454_p0) * $signed(mul_ln727_11_fu_1454_p1));

assign mul_ln727_12_fu_1478_p0 = sext_ln727_12_reg_1893;

assign mul_ln727_12_fu_1478_p1 = data1_12_V_V_TDATA_int;

assign mul_ln727_12_fu_1478_p2 = ($signed(mul_ln727_12_fu_1478_p0) * $signed(mul_ln727_12_fu_1478_p1));

assign mul_ln727_13_fu_1502_p0 = sext_ln727_13_reg_1903;

assign mul_ln727_13_fu_1502_p1 = data1_13_V_V_TDATA_int;

assign mul_ln727_13_fu_1502_p2 = ($signed(mul_ln727_13_fu_1502_p0) * $signed(mul_ln727_13_fu_1502_p1));

assign mul_ln727_14_fu_1526_p0 = sext_ln727_14_reg_1913;

assign mul_ln727_14_fu_1526_p1 = data1_14_V_V_TDATA_int;

assign mul_ln727_14_fu_1526_p2 = ($signed(mul_ln727_14_fu_1526_p0) * $signed(mul_ln727_14_fu_1526_p1));

assign mul_ln727_15_fu_1550_p0 = sext_ln727_15_reg_1923;

assign mul_ln727_15_fu_1550_p1 = data1_15_V_V_TDATA_int;

assign mul_ln727_15_fu_1550_p2 = ($signed(mul_ln727_15_fu_1550_p0) * $signed(mul_ln727_15_fu_1550_p1));

assign mul_ln727_1_fu_1214_p0 = sext_ln727_1_reg_1783;

assign mul_ln727_1_fu_1214_p1 = data1_1_V_V_TDATA_int;

assign mul_ln727_1_fu_1214_p2 = ($signed(mul_ln727_1_fu_1214_p0) * $signed(mul_ln727_1_fu_1214_p1));

assign mul_ln727_2_fu_1238_p0 = sext_ln727_2_reg_1793;

assign mul_ln727_2_fu_1238_p1 = data1_2_V_V_TDATA_int;

assign mul_ln727_2_fu_1238_p2 = ($signed(mul_ln727_2_fu_1238_p0) * $signed(mul_ln727_2_fu_1238_p1));

assign mul_ln727_3_fu_1262_p0 = sext_ln727_3_reg_1803;

assign mul_ln727_3_fu_1262_p1 = data1_3_V_V_TDATA_int;

assign mul_ln727_3_fu_1262_p2 = ($signed(mul_ln727_3_fu_1262_p0) * $signed(mul_ln727_3_fu_1262_p1));

assign mul_ln727_4_fu_1286_p0 = sext_ln727_4_reg_1813;

assign mul_ln727_4_fu_1286_p1 = data1_4_V_V_TDATA_int;

assign mul_ln727_4_fu_1286_p2 = ($signed(mul_ln727_4_fu_1286_p0) * $signed(mul_ln727_4_fu_1286_p1));

assign mul_ln727_5_fu_1310_p0 = sext_ln727_5_reg_1823;

assign mul_ln727_5_fu_1310_p1 = data1_5_V_V_TDATA_int;

assign mul_ln727_5_fu_1310_p2 = ($signed(mul_ln727_5_fu_1310_p0) * $signed(mul_ln727_5_fu_1310_p1));

assign mul_ln727_6_fu_1334_p0 = sext_ln727_6_reg_1833;

assign mul_ln727_6_fu_1334_p1 = data1_6_V_V_TDATA_int;

assign mul_ln727_6_fu_1334_p2 = ($signed(mul_ln727_6_fu_1334_p0) * $signed(mul_ln727_6_fu_1334_p1));

assign mul_ln727_7_fu_1358_p0 = sext_ln727_7_reg_1843;

assign mul_ln727_7_fu_1358_p1 = data1_7_V_V_TDATA_int;

assign mul_ln727_7_fu_1358_p2 = ($signed(mul_ln727_7_fu_1358_p0) * $signed(mul_ln727_7_fu_1358_p1));

assign mul_ln727_8_fu_1382_p0 = sext_ln727_8_reg_1853;

assign mul_ln727_8_fu_1382_p1 = data1_8_V_V_TDATA_int;

assign mul_ln727_8_fu_1382_p2 = ($signed(mul_ln727_8_fu_1382_p0) * $signed(mul_ln727_8_fu_1382_p1));

assign mul_ln727_9_fu_1406_p0 = sext_ln727_9_reg_1863;

assign mul_ln727_9_fu_1406_p1 = data1_9_V_V_TDATA_int;

assign mul_ln727_9_fu_1406_p2 = ($signed(mul_ln727_9_fu_1406_p0) * $signed(mul_ln727_9_fu_1406_p1));

assign mul_ln727_fu_1190_p0 = sext_ln727_reg_1773;

assign mul_ln727_fu_1190_p1 = data1_0_V_V_TDATA_int;

assign mul_ln727_fu_1190_p2 = ($signed(mul_ln727_fu_1190_p0) * $signed(mul_ln727_fu_1190_p1));

assign res_0_V_V_TVALID = regslice_both_res_0_V_V_U_vld_out;

assign res_10_V_V_TVALID = regslice_both_res_10_V_V_U_vld_out;

assign res_11_V_V_TVALID = regslice_both_res_11_V_V_U_vld_out;

assign res_12_V_V_TVALID = regslice_both_res_12_V_V_U_vld_out;

assign res_13_V_V_TVALID = regslice_both_res_13_V_V_U_vld_out;

assign res_14_V_V_TVALID = regslice_both_res_14_V_V_U_vld_out;

assign res_15_V_V_TVALID = regslice_both_res_15_V_V_U_vld_out;

assign res_1_V_V_TVALID = regslice_both_res_1_V_V_U_vld_out;

assign res_2_V_V_TVALID = regslice_both_res_2_V_V_U_vld_out;

assign res_3_V_V_TVALID = regslice_both_res_3_V_V_U_vld_out;

assign res_4_V_V_TVALID = regslice_both_res_4_V_V_U_vld_out;

assign res_5_V_V_TVALID = regslice_both_res_5_V_V_U_vld_out;

assign res_6_V_V_TVALID = regslice_both_res_6_V_V_U_vld_out;

assign res_7_V_V_TVALID = regslice_both_res_7_V_V_U_vld_out;

assign res_8_V_V_TVALID = regslice_both_res_8_V_V_U_vld_out;

assign res_9_V_V_TVALID = regslice_both_res_9_V_V_U_vld_out;

assign sext_ln1192_10_fu_1042_p1 = $signed(tmp_V_26_fu_226);

assign sext_ln1192_11_fu_1064_p1 = $signed(tmp_V_27_fu_230);

assign sext_ln1192_12_fu_1086_p1 = $signed(tmp_V_28_fu_234);

assign sext_ln1192_13_fu_1108_p1 = $signed(tmp_V_29_fu_238);

assign sext_ln1192_14_fu_1130_p1 = $signed(tmp_V_30_fu_242);

assign sext_ln1192_15_fu_1152_p1 = $signed(tmp_V_31_fu_246);

assign sext_ln1192_1_fu_844_p1 = $signed(tmp_V_1_fu_190);

assign sext_ln1192_2_fu_866_p1 = $signed(tmp_V_2_fu_194);

assign sext_ln1192_3_fu_888_p1 = $signed(tmp_V_19_fu_198);

assign sext_ln1192_4_fu_910_p1 = $signed(tmp_V_20_fu_202);

assign sext_ln1192_5_fu_932_p1 = $signed(tmp_V_21_fu_206);

assign sext_ln1192_6_fu_954_p1 = $signed(tmp_V_22_fu_210);

assign sext_ln1192_7_fu_976_p1 = $signed(tmp_V_23_fu_214);

assign sext_ln1192_8_fu_998_p1 = $signed(tmp_V_24_fu_218);

assign sext_ln1192_9_fu_1020_p1 = $signed(tmp_V_25_fu_222);

assign sext_ln1192_fu_822_p1 = $signed(tmp_V_fu_186);

assign sext_ln727_10_fu_1052_p1 = $signed(add_ln1192_20_fu_1046_p2);

assign sext_ln727_11_fu_1074_p1 = $signed(add_ln1192_22_fu_1068_p2);

assign sext_ln727_12_fu_1096_p1 = $signed(add_ln1192_24_fu_1090_p2);

assign sext_ln727_13_fu_1118_p1 = $signed(add_ln1192_26_fu_1112_p2);

assign sext_ln727_14_fu_1140_p1 = $signed(add_ln1192_28_fu_1134_p2);

assign sext_ln727_15_fu_1162_p1 = $signed(add_ln1192_30_fu_1156_p2);

assign sext_ln727_1_fu_854_p1 = $signed(add_ln1192_2_fu_848_p2);

assign sext_ln727_2_fu_876_p1 = $signed(add_ln1192_4_fu_870_p2);

assign sext_ln727_3_fu_898_p1 = $signed(add_ln1192_6_fu_892_p2);

assign sext_ln727_4_fu_920_p1 = $signed(add_ln1192_8_fu_914_p2);

assign sext_ln727_5_fu_942_p1 = $signed(add_ln1192_10_fu_936_p2);

assign sext_ln727_6_fu_964_p1 = $signed(add_ln1192_12_fu_958_p2);

assign sext_ln727_7_fu_986_p1 = $signed(add_ln1192_14_fu_980_p2);

assign sext_ln727_8_fu_1008_p1 = $signed(add_ln1192_16_fu_1002_p2);

assign sext_ln727_9_fu_1030_p1 = $signed(add_ln1192_18_fu_1024_p2);

assign sext_ln727_fu_832_p1 = $signed(add_ln1192_fu_826_p2);

assign shl_ln728_10_fu_1078_p3 = {{tmp_V_43_fu_294}, {16'd0}};

assign shl_ln728_11_fu_1100_p3 = {{tmp_V_44_fu_298}, {16'd0}};

assign shl_ln728_12_fu_1122_p3 = {{tmp_V_45_fu_302}, {16'd0}};

assign shl_ln728_13_fu_1144_p3 = {{tmp_V_46_fu_306}, {16'd0}};

assign shl_ln728_14_fu_1166_p3 = {{tmp_V_47_fu_310}, {16'd0}};

assign shl_ln728_1_fu_858_p3 = {{tmp_V_33_fu_254}, {16'd0}};

assign shl_ln728_2_fu_880_p3 = {{tmp_V_34_fu_258}, {16'd0}};

assign shl_ln728_3_fu_902_p3 = {{tmp_V_35_fu_262}, {16'd0}};

assign shl_ln728_4_fu_924_p3 = {{tmp_V_36_fu_266}, {16'd0}};

assign shl_ln728_5_fu_946_p3 = {{tmp_V_37_fu_270}, {16'd0}};

assign shl_ln728_6_fu_968_p3 = {{tmp_V_38_fu_274}, {16'd0}};

assign shl_ln728_7_fu_990_p3 = {{tmp_V_39_fu_278}, {16'd0}};

assign shl_ln728_8_fu_1012_p3 = {{tmp_V_40_fu_282}, {16'd0}};

assign shl_ln728_9_fu_1034_p3 = {{tmp_V_41_fu_286}, {16'd0}};

assign shl_ln728_s_fu_1056_p3 = {{tmp_V_42_fu_290}, {16'd0}};

assign shl_ln_fu_836_p3 = {{tmp_V_32_fu_250}, {16'd0}};

assign trunc_ln203_fu_562_p1 = i_0_i_reg_528[4:0];

always @ (posedge ap_clk) begin
    shl_ln_reg_1778[15:0] <= 16'b0000000000000000;
    shl_ln728_1_reg_1788[15:0] <= 16'b0000000000000000;
    shl_ln728_2_reg_1798[15:0] <= 16'b0000000000000000;
    shl_ln728_3_reg_1808[15:0] <= 16'b0000000000000000;
    shl_ln728_4_reg_1818[15:0] <= 16'b0000000000000000;
    shl_ln728_5_reg_1828[15:0] <= 16'b0000000000000000;
    shl_ln728_6_reg_1838[15:0] <= 16'b0000000000000000;
    shl_ln728_7_reg_1848[15:0] <= 16'b0000000000000000;
    shl_ln728_8_reg_1858[15:0] <= 16'b0000000000000000;
    shl_ln728_9_reg_1868[15:0] <= 16'b0000000000000000;
    shl_ln728_s_reg_1878[15:0] <= 16'b0000000000000000;
    shl_ln728_10_reg_1888[15:0] <= 16'b0000000000000000;
    shl_ln728_11_reg_1898[15:0] <= 16'b0000000000000000;
    shl_ln728_12_reg_1908[15:0] <= 16'b0000000000000000;
    shl_ln728_13_reg_1918[15:0] <= 16'b0000000000000000;
    shl_ln728_14_reg_1928[15:0] <= 16'b0000000000000000;
end

endmodule //film_switch_ap_fixed_ap_fixed_ap_fixed_config42_s
